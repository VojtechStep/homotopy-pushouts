From 5eac14f7497f637d1960acc7f0a92b4bfbda2da2 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Fri, 8 Sep 2023 21:08:20 +0200
Subject: [PATCH 1/9] Whiskering lemmas

---
 src/foundation-core/homotopies.lagda.md       | 41 +++++++++++++++++
 .../function-extensionality.lagda.md          | 46 +++++++++++++++++++
 2 files changed, 87 insertions(+)

diff --git a/src/foundation-core/homotopies.lagda.md b/src/foundation-core/homotopies.lagda.md
index 5f08005289..389be5b157 100644
--- a/src/foundation-core/homotopies.lagda.md
+++ b/src/foundation-core/homotopies.lagda.md
@@ -377,6 +377,47 @@ module _
     inv-htpy (right-whisk-inv-htpy H f)
 ```
 
+### Distributivity of whiskering over composition of homotopies
+
+```agda
+module _
+  { l1 l2 l3 : Level} {A : UU l1} {B : UU l2} {C : UU l3}
+  where
+
+  distributive-left-whisk-concat-htpy :
+    { f g h : A → B} (k : B → C) →
+    ( H : f ~ g) (K : g ~ h) →
+    ( k ·l (H ∙h K)) ~ ((k ·l H) ∙h (k ·l K))
+  distributive-left-whisk-concat-htpy k H K a =
+    ap-concat k (H a) (K a)
+
+  distributive-right-whisk-concat-htpy :
+    ( k : A → B) {f g h : B → C} →
+    ( H : f ~ g) (K : g ~ h) →
+    ( (H ∙h K) ·r k) ~ ((H ·r k) ∙h (K ·r k))
+  distributive-right-whisk-concat-htpy k H K = refl-htpy
+```
+
+### Associativity of whiskering and function composition
+
+```agda
+module _
+  { l1 l2 l3 l4 : Level} {A : UU l1} {B : UU l2} {C : UU l3} {D : UU l4}
+  where
+
+  associative-left-whisk-comp :
+    ( k : C → D) (h : B → C) {f g : A → B} →
+    ( H : f ~ g) →
+    ( k ·l (h ·l H)) ~ ((k ∘ h) ·l H)
+  associative-left-whisk-comp k h H x = inv (ap-comp k h (H x))
+
+  associative-right-whisk-comp :
+    { f g : C → D} (h : B → C) (k : A → B) →
+    ( H : f ~ g) →
+    ( (H ·r h) ·r k) ~ (H ·r (h ∘ k))
+  associative-right-whisk-comp h k H = refl-htpy
+```
+
 ## Reasoning with homotopies
 
 Homotopies can be constructed by equational reasoning in the following way:
diff --git a/src/foundation/function-extensionality.lagda.md b/src/foundation/function-extensionality.lagda.md
index b27bc07f38..687e9217e3 100644
--- a/src/foundation/function-extensionality.lagda.md
+++ b/src/foundation/function-extensionality.lagda.md
@@ -113,6 +113,52 @@ module _
         is-retraction-eq-htpy (eq-htpy H ∙ eq-htpy K)
 ```
 
+### Computation of function extensionality on whiskerings
+
+```agda
+module _
+  { l1 l2 l3 : Level} {A : UU l1} {B : UU l2} {C : UU l3}
+  { f g : B → C} (h : A → B)
+  where
+
+  compute-eq-htpy-htpy-eq-right-whisk :
+    ( p : f ＝ g) →
+    eq-htpy ((htpy-eq p) ·r h) ＝ ap (precomp h C) p
+  compute-eq-htpy-htpy-eq-right-whisk refl =
+    eq-htpy-refl-htpy (f ∘ h)
+
+  compute-eq-htpy-right-whisk :
+    ( H : f ~ g) →
+    eq-htpy (H ·r h) ＝ ap (precomp h C) (eq-htpy H)
+  compute-eq-htpy-right-whisk H =
+    ap
+      ( λ K → eq-htpy (K ·r h))
+      ( inv (is-section-eq-htpy H)) ∙
+    compute-eq-htpy-htpy-eq-right-whisk (eq-htpy H)
+```
+
+```agda
+module _
+  { l1 l2 l3 : Level} {A : UU l1} {B : UU l2} {C : UU l3}
+  { f g : A → B} (h : B → C)
+  where
+
+  compute-eq-htpy-htpy-eq-left-whisk :
+    ( p : f ＝ g) →
+    eq-htpy ( h ·l (htpy-eq p)) ＝ ap (postcomp A h) p
+  compute-eq-htpy-htpy-eq-left-whisk refl =
+    eq-htpy-refl-htpy (h ∘ f)
+
+  compute-eq-htpy-left-whisk :
+    (H : f ~ g) →
+    eq-htpy (h ·l H) ＝ ap (postcomp A h) (eq-htpy H)
+  compute-eq-htpy-left-whisk H =
+    ap
+      ( λ K → eq-htpy (h ·l K))
+      ( inv (is-section-eq-htpy H)) ∙
+    compute-eq-htpy-htpy-eq-left-whisk (eq-htpy H)
+```
+
 ## See also
 
 - That the univalence axiom implies function extensionality is proven in

From 5be2d587dbf82e275fed1afe9e087181096f9f58 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Fri, 8 Sep 2023 21:08:28 +0200
Subject: [PATCH 2/9] Commutativity of pasting squares and precomp transpose

---
 .../commuting-squares-of-maps.lagda.md        | 188 ++++++++++++++++++
 1 file changed, 188 insertions(+)

diff --git a/src/foundation/commuting-squares-of-maps.lagda.md b/src/foundation/commuting-squares-of-maps.lagda.md
index 783bc9bb64..251841f582 100644
--- a/src/foundation/commuting-squares-of-maps.lagda.md
+++ b/src/foundation/commuting-squares-of-maps.lagda.md
@@ -9,12 +9,15 @@ open import foundation-core.commuting-squares-of-maps public
 <details><summary>Imports</summary>
 
 ```agda
+open import foundation.action-on-identifications-binary-functions
 open import foundation.action-on-identifications-functions
 open import foundation.equivalences
+open import foundation.function-extensionality
 open import foundation.universe-levels
 
 open import foundation-core.function-types
 open import foundation-core.functoriality-function-types
+open import foundation-core.homotopies
 open import foundation-core.identity-types
 ```
 
@@ -91,3 +94,188 @@ precomp-coherence-square-maps :
 precomp-coherence-square-maps top leeft right bottom H X =
   htpy-precomp H X
 ```
+
+### Commutativity of pasting squares and transposing by precomposition
+
+```agda
+module _
+  { l1 l2 l3 l4 l5 l6 l7 : Level}
+  { A : UU l1} {B : UU l2} {C : UU l3} {X : UU l4} {Y : UU l5} {Z : UU l6}
+  ( W : UU l7)
+  where
+
+  commutative-precomp-pasting-coherence-square-maps :
+    ( top-left : A → B) (top-right : B → C)
+    ( left : A → X) (middle : B → Y) (right : C → Z)
+    ( bottom-left : X → Y) (bottom-right : Y → Z) →
+    ( H : coherence-square-maps top-left left middle bottom-left) →
+    ( K : coherence-square-maps top-right middle right bottom-right) →
+    precomp-coherence-square-maps
+      ( top-right ∘ top-left)
+      ( left)
+      ( right)
+      ( bottom-right ∘ bottom-left)
+      ( pasting-horizontal-coherence-square-maps
+        ( top-left)
+        ( top-right)
+        ( left)
+        ( middle)
+        ( right)
+        ( bottom-left)
+        ( bottom-right)
+        ( H)
+        ( K))
+      ( W) ~
+    pasting-vertical-coherence-square-maps
+      ( precomp right W)
+      ( precomp bottom-right W)
+      ( precomp top-right W)
+      ( precomp middle W)
+      ( precomp bottom-left W)
+      ( precomp top-left W)
+      ( precomp left W)
+      ( precomp-coherence-square-maps
+        ( top-right)
+        ( middle)
+        ( right)
+        ( bottom-right)
+        ( K)
+        ( W))
+      ( precomp-coherence-square-maps
+        ( top-left)
+        ( left)
+        ( middle)
+        ( bottom-left)
+        ( H)
+        ( W))
+  commutative-precomp-pasting-coherence-square-maps
+    ( top-left)
+    ( top-right)
+    ( left)
+    ( middle)
+    ( right)
+    ( bottom-left)
+    ( bottom-right)
+    ( H)
+    ( K)
+    ( h) =
+    equational-reasoning
+      eq-htpy
+        ( h ·l ((bottom-right ·l H) ∙h (K ·r top-left)))
+      ＝ eq-htpy
+          ( (h ·l (bottom-right ·l H)) ∙h ((h ·l K) ·r top-left))
+        by
+          ap
+            ( eq-htpy)
+            ( eq-htpy
+              ( distributive-left-whisk-concat-htpy
+                ( h)
+                ( bottom-right ·l H)
+                ( K ·r top-left)))
+      ＝ eq-htpy
+          ( h ·l (bottom-right ·l H)) ∙
+        eq-htpy
+          ( (h ·l K) ·r top-left)
+        by
+          eq-htpy-concat-htpy
+            ( h ·l (bottom-right ·l H))
+            ( (h ·l K) ·r top-left)
+      ＝ eq-htpy
+          ( (h ∘ bottom-right) ·l H) ∙
+          ap
+            ( precomp top-left W)
+            ( eq-htpy (h ·l K))
+        by
+          ap-binary
+            ( λ L q → eq-htpy L ∙ q)
+            ( eq-htpy (associative-left-whisk-comp h bottom-right H))
+            ( compute-eq-htpy-right-whisk
+              ( top-left)
+              ( (h ·l K)))
+
+  commutative-precomp-pasting-coherence-square-maps' :
+    ( top : A → X) (left-top : A → B) (right-top : X → Y) (middle : B → Y) →
+    ( left-bottom : B → C) (right-bottom : Y → Z) (bottom : C → Z) →
+    ( H : coherence-square-maps top left-top right-top middle) →
+    ( K : coherence-square-maps middle left-bottom right-bottom bottom) →
+    precomp-coherence-square-maps
+      ( top)
+      ( left-bottom ∘ left-top)
+      ( right-bottom ∘ right-top)
+      ( bottom)
+      ( pasting-vertical-coherence-square-maps
+        ( top)
+        ( left-top)
+        ( right-top)
+        ( middle)
+        ( left-bottom)
+        ( right-bottom)
+        ( bottom)
+        ( H)
+        ( K))
+      ( W) ~
+    pasting-horizontal-coherence-square-maps
+      ( precomp right-bottom W)
+      ( precomp right-top W)
+      ( precomp bottom W)
+      ( precomp middle W)
+      ( precomp top W)
+      ( precomp left-bottom W)
+      ( precomp left-top W)
+      ( precomp-coherence-square-maps
+        ( middle)
+        ( left-bottom)
+        ( right-bottom)
+        ( bottom)
+        ( K)
+        ( W))
+      ( precomp-coherence-square-maps
+        ( top)
+        ( left-top)
+        ( right-top)
+        ( middle)
+        ( H)
+        ( W))
+  commutative-precomp-pasting-coherence-square-maps'
+    ( top)
+    ( left-top)
+    ( right-top)
+    ( middle)
+    ( left-bottom)
+    ( right-bottom)
+    ( bottom)
+    ( H)
+    ( K)
+    ( h) =
+    equational-reasoning
+      eq-htpy
+        (h ·l ((K ·r left-top) ∙h (right-bottom ·l H)))
+      ＝ eq-htpy
+          ( ((h ·l K) ·r left-top) ∙h (h ·l (right-bottom ·l H)))
+        by
+          ap
+          ( eq-htpy)
+          ( eq-htpy
+            ( distributive-left-whisk-concat-htpy
+            ( h)
+            ( K ·r left-top)
+            ( right-bottom ·l H)))
+      ＝ eq-htpy
+          ( (h ·l K) ·r left-top) ∙
+        eq-htpy
+          ( h ·l (right-bottom ·l H))
+        by
+          eq-htpy-concat-htpy
+            ( (h ·l K) ·r left-top)
+            ( h ·l (right-bottom ·l H))
+      ＝ ap
+          ( precomp left-top W)
+          ( eq-htpy (h ·l K)) ∙
+        eq-htpy
+          ( (h ∘ right-bottom) ·l H)
+        by
+          ap-binary
+            ( λ p L → p ∙ eq-htpy L)
+            ( compute-eq-htpy-right-whisk left-top (h ·l K))
+            ( eq-htpy (associative-left-whisk-comp h right-bottom H))
+```

From 0e6c1955fa77cf4f477b0c64fa79e5c52dbe7fc5 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Fri, 8 Sep 2023 21:49:39 +0200
Subject: [PATCH 3/9] Prose

---
 .../commuting-squares-of-maps.lagda.md        | 33 +++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/src/foundation/commuting-squares-of-maps.lagda.md b/src/foundation/commuting-squares-of-maps.lagda.md
index 251841f582..d221d5e565 100644
--- a/src/foundation/commuting-squares-of-maps.lagda.md
+++ b/src/foundation/commuting-squares-of-maps.lagda.md
@@ -97,6 +97,39 @@ precomp-coherence-square-maps top leeft right bottom H X =
 
 ### Commutativity of pasting squares and transposing by precomposition
 
+Given two commuting squares which can be composed horizontally (vertically),
+we know that composing them and then transposing them by precomposition gives
+the same homotopies as first transposing the squares and then composing them.
+
+```text
+      tl       tr                tr ∘ tl
+  A -----> B -----> C         A --------> C
+  |        |        |         |           |
+l |       m|        | r |->  l|          r|
+  |   H    |   K    |         |   H | K   |
+  v        v        v         v           v
+  X -----> Y -----> Z         X --------> Z
+      bl       br                br ∘ bl
+
+         -                          -
+         |                          |
+         v                          v
+
+           -∘r
+    W^Z ------> W^C
+     |           |
+-∘br |    W^K    | -∘tr           W^(H | K)
+     |           |
+     v     -∘m   v                   ~
+    W^Y ------> W^B   |->
+     |           |                  W^K
+-∘bl |    W^H    | -∘tl             ---
+     |           |                  W^H
+     v           v
+    W^X ------> W^A
+          -∘l
+```
+
 ```agda
 module _
   { l1 l2 l3 l4 l5 l6 l7 : Level}

From 0baddec15466d7dbb07acc43778ae2cb72362ee9 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Fri, 8 Sep 2023 22:08:42 +0200
Subject: [PATCH 4/9] pre-commit

---
 src/foundation/commuting-squares-of-maps.lagda.md | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/foundation/commuting-squares-of-maps.lagda.md b/src/foundation/commuting-squares-of-maps.lagda.md
index d221d5e565..c7fb6dccce 100644
--- a/src/foundation/commuting-squares-of-maps.lagda.md
+++ b/src/foundation/commuting-squares-of-maps.lagda.md
@@ -97,9 +97,9 @@ precomp-coherence-square-maps top leeft right bottom H X =
 
 ### Commutativity of pasting squares and transposing by precomposition
 
-Given two commuting squares which can be composed horizontally (vertically),
-we know that composing them and then transposing them by precomposition gives
-the same homotopies as first transposing the squares and then composing them.
+Given two commuting squares which can be composed horizontally (vertically), we
+know that composing them and then transposing them by precomposition gives the
+same homotopies as first transposing the squares and then composing them.
 
 ```text
       tl       tr                tr ∘ tl

From fb8328dea4317aecaab95a5c20869b69850e4e89 Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Sat, 9 Sep 2023 12:52:37 +0200
Subject: [PATCH 5/9] Update src/foundation/commuting-squares-of-maps.lagda.md

---
 .../commuting-squares-of-maps.lagda.md        | 32 +++++++++----------
 1 file changed, 16 insertions(+), 16 deletions(-)

diff --git a/src/foundation/commuting-squares-of-maps.lagda.md b/src/foundation/commuting-squares-of-maps.lagda.md
index c7fb6dccce..5932c1ae66 100644
--- a/src/foundation/commuting-squares-of-maps.lagda.md
+++ b/src/foundation/commuting-squares-of-maps.lagda.md
@@ -198,33 +198,33 @@ module _
       ＝ eq-htpy
           ( (h ·l (bottom-right ·l H)) ∙h ((h ·l K) ·r top-left))
         by
-          ap
-            ( eq-htpy)
-            ( eq-htpy
-              ( distributive-left-whisk-concat-htpy
-                ( h)
-                ( bottom-right ·l H)
-                ( K ·r top-left)))
+        ap
+          ( eq-htpy)
+          ( eq-htpy
+            ( distributive-left-whisk-concat-htpy
+              ( h)
+              ( bottom-right ·l H)
+              ( K ·r top-left)))
       ＝ eq-htpy
           ( h ·l (bottom-right ·l H)) ∙
         eq-htpy
           ( (h ·l K) ·r top-left)
         by
-          eq-htpy-concat-htpy
-            ( h ·l (bottom-right ·l H))
-            ( (h ·l K) ·r top-left)
+        eq-htpy-concat-htpy
+          ( h ·l (bottom-right ·l H))
+          ( (h ·l K) ·r top-left)
       ＝ eq-htpy
           ( (h ∘ bottom-right) ·l H) ∙
           ap
             ( precomp top-left W)
             ( eq-htpy (h ·l K))
         by
-          ap-binary
-            ( λ L q → eq-htpy L ∙ q)
-            ( eq-htpy (associative-left-whisk-comp h bottom-right H))
-            ( compute-eq-htpy-right-whisk
-              ( top-left)
-              ( (h ·l K)))
+        ap-binary
+          ( λ L q → eq-htpy L ∙ q)
+          ( eq-htpy (associative-left-whisk-comp h bottom-right H))
+          ( compute-eq-htpy-right-whisk
+            ( top-left)
+            ( h ·l K))
 
   commutative-precomp-pasting-coherence-square-maps' :
     ( top : A → X) (left-top : A → B) (right-top : X → Y) (middle : B → Y) →

From 9321ac2a036402975329f8f3ce64f5eab45a725b Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Sat, 9 Sep 2023 12:54:32 +0200
Subject: [PATCH 6/9] Update src/foundation/commuting-squares-of-maps.lagda.md

---
 .../commuting-squares-of-maps.lagda.md           | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/foundation/commuting-squares-of-maps.lagda.md b/src/foundation/commuting-squares-of-maps.lagda.md
index 5932c1ae66..adb93a1fd1 100644
--- a/src/foundation/commuting-squares-of-maps.lagda.md
+++ b/src/foundation/commuting-squares-of-maps.lagda.md
@@ -286,7 +286,7 @@ module _
       ＝ eq-htpy
           ( ((h ·l K) ·r left-top) ∙h (h ·l (right-bottom ·l H)))
         by
-          ap
+        ap
           ( eq-htpy)
           ( eq-htpy
             ( distributive-left-whisk-concat-htpy
@@ -298,17 +298,17 @@ module _
         eq-htpy
           ( h ·l (right-bottom ·l H))
         by
-          eq-htpy-concat-htpy
-            ( (h ·l K) ·r left-top)
-            ( h ·l (right-bottom ·l H))
+        eq-htpy-concat-htpy
+          ( (h ·l K) ·r left-top)
+          ( h ·l (right-bottom ·l H))
       ＝ ap
           ( precomp left-top W)
           ( eq-htpy (h ·l K)) ∙
         eq-htpy
           ( (h ∘ right-bottom) ·l H)
         by
-          ap-binary
-            ( λ p L → p ∙ eq-htpy L)
-            ( compute-eq-htpy-right-whisk left-top (h ·l K))
-            ( eq-htpy (associative-left-whisk-comp h right-bottom H))
+        ap-binary
+          ( λ p L → p ∙ eq-htpy L)
+          ( compute-eq-htpy-right-whisk left-top (h ·l K))
+          ( eq-htpy (associative-left-whisk-comp h right-bottom H))
 ```

From 49722661d960e165d020b5ba8484b2d6e7c946d9 Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Sat, 9 Sep 2023 12:56:23 +0200
Subject: [PATCH 7/9] Update src/foundation/function-extensionality.lagda.md

---
 src/foundation/function-extensionality.lagda.md | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/foundation/function-extensionality.lagda.md b/src/foundation/function-extensionality.lagda.md
index 687e9217e3..7bcfd113da 100644
--- a/src/foundation/function-extensionality.lagda.md
+++ b/src/foundation/function-extensionality.lagda.md
@@ -131,10 +131,10 @@ module _
     ( H : f ~ g) →
     eq-htpy (H ·r h) ＝ ap (precomp h C) (eq-htpy H)
   compute-eq-htpy-right-whisk H =
-    ap
+    ( ap
       ( λ K → eq-htpy (K ·r h))
-      ( inv (is-section-eq-htpy H)) ∙
-    compute-eq-htpy-htpy-eq-right-whisk (eq-htpy H)
+      ( inv (is-section-eq-htpy H))) ∙
+    ( compute-eq-htpy-htpy-eq-right-whisk (eq-htpy H))
 ```
 
 ```agda

From 38549854dbd2a62e624d89402d05ccf6afd84acb Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Sat, 9 Sep 2023 12:56:56 +0200
Subject: [PATCH 8/9] Update src/foundation/function-extensionality.lagda.md

---
 src/foundation/function-extensionality.lagda.md | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/foundation/function-extensionality.lagda.md b/src/foundation/function-extensionality.lagda.md
index 7bcfd113da..9a52223efd 100644
--- a/src/foundation/function-extensionality.lagda.md
+++ b/src/foundation/function-extensionality.lagda.md
@@ -153,10 +153,10 @@ module _
     (H : f ~ g) →
     eq-htpy (h ·l H) ＝ ap (postcomp A h) (eq-htpy H)
   compute-eq-htpy-left-whisk H =
-    ap
+    ( ap
       ( λ K → eq-htpy (h ·l K))
-      ( inv (is-section-eq-htpy H)) ∙
-    compute-eq-htpy-htpy-eq-left-whisk (eq-htpy H)
+      ( inv (is-section-eq-htpy H))) ∙
+    ( compute-eq-htpy-htpy-eq-left-whisk (eq-htpy H))
 ```
 
 ## See also

From 8919205d4c41a32a923202ba05a85ead03575230 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Mon, 11 Sep 2023 16:28:01 +0200
Subject: [PATCH 9/9] More descriptive names

---
 src/foundation/commuting-squares-of-maps.lagda.md | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/foundation/commuting-squares-of-maps.lagda.md b/src/foundation/commuting-squares-of-maps.lagda.md
index adb93a1fd1..70f6ecced6 100644
--- a/src/foundation/commuting-squares-of-maps.lagda.md
+++ b/src/foundation/commuting-squares-of-maps.lagda.md
@@ -95,7 +95,7 @@ precomp-coherence-square-maps top leeft right bottom H X =
   htpy-precomp H X
 ```
 
-### Commutativity of pasting squares and transposing by precomposition
+### Distributivity of pasting squares and transposing by precomposition
 
 Given two commuting squares which can be composed horizontally (vertically), we
 know that composing them and then transposing them by precomposition gives the
@@ -137,7 +137,7 @@ module _
   ( W : UU l7)
   where
 
-  commutative-precomp-pasting-coherence-square-maps :
+  distributive-precomp-pasting-horizontal-coherence-square-maps :
     ( top-left : A → B) (top-right : B → C)
     ( left : A → X) (middle : B → Y) (right : C → Z)
     ( bottom-left : X → Y) (bottom-right : Y → Z) →
@@ -181,7 +181,7 @@ module _
         ( bottom-left)
         ( H)
         ( W))
-  commutative-precomp-pasting-coherence-square-maps
+  distributive-precomp-pasting-horizontal-coherence-square-maps
     ( top-left)
     ( top-right)
     ( left)
@@ -226,7 +226,7 @@ module _
             ( top-left)
             ( h ·l K))
 
-  commutative-precomp-pasting-coherence-square-maps' :
+  distributive-precomp-pasting-vertical-coherence-square-maps :
     ( top : A → X) (left-top : A → B) (right-top : X → Y) (middle : B → Y) →
     ( left-bottom : B → C) (right-bottom : Y → Z) (bottom : C → Z) →
     ( H : coherence-square-maps top left-top right-top middle) →
@@ -269,7 +269,7 @@ module _
         ( middle)
         ( H)
         ( W))
-  commutative-precomp-pasting-coherence-square-maps'
+  distributive-precomp-pasting-vertical-coherence-square-maps
     ( top)
     ( left-top)
     ( right-top)
