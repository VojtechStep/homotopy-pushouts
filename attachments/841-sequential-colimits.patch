From a26541876d0a558418d44693cd8366a914899f73 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sat, 14 Oct 2023 23:25:20 +0200
Subject: [PATCH 01/28] Cocones under sequential diagrams

---
 ...cocones-under-sequential-diagrams.lagda.md | 381 ++++++++++++++++++
 .../coforks.lagda.md                          |   2 +-
 .../sequential-diagrams.lagda.md              |  54 +++
 3 files changed, 436 insertions(+), 1 deletion(-)
 create mode 100644 src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
 create mode 100644 src/synthetic-homotopy-theory/sequential-diagrams.lagda.md

diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
new file mode 100644
index 0000000000..9aac6524b4
--- /dev/null
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -0,0 +1,381 @@
+# Cocones under sequential diagrams
+
+```agda
+module synthetic-homotopy-theory.cocones-under-sequential-diagrams where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import elementary-number-theory.natural-numbers
+
+open import foundation.action-on-identifications-functions
+open import foundation.binary-homotopies
+open import foundation.commuting-squares-of-maps
+open import foundation.commuting-triangles-of-maps
+open import foundation.contractible-types
+open import foundation.dependent-pair-types
+open import foundation.equivalences
+open import foundation.function-extensionality
+open import foundation.function-types
+open import foundation.functoriality-dependent-pair-types
+open import foundation.fundamental-theorem-of-identity-types
+open import foundation.homotopies
+open import foundation.homotopy-induction
+open import foundation.identity-types
+open import foundation.structure-identity-principle
+open import foundation.universe-levels
+open import foundation.whiskering-homotopies
+
+open import synthetic-homotopy-theory.coforks
+open import synthetic-homotopy-theory.sequential-diagrams
+```
+
+</details>
+
+## Idea
+
+A **cocone under a
+[sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)
+`(A, a)`** with vertex `X : ùì§` consists of a family of maps `i‚Çô : A n ‚Üí C` and
+a family of [homotopies](foundation.homotopies.md) `H‚Çô` asserting that the
+triangles
+
+```text
+      a‚Çô
+ A n ----> A (n + 1)
+   \       /
+    \     /
+  i‚Çô \   / i‚Çô‚Çä‚ÇÅ
+      V V
+       X
+```
+
+[commute](foundation.commuting-triangles-of-maps.md).
+
+## Definitions
+
+### Cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) (X : UU l2)
+  where
+
+  cocone-sequential-diagram : UU (l1 ‚äî l2)
+  cocone-sequential-diagram =
+    Œ£ ( ( n : ‚Ñï) ‚Üí family-sequential-diagram A n ‚Üí X)
+      ( Œª i ‚Üí
+        ( n : ‚Ñï) ‚Üí
+        coherence-triangle-maps
+          ( i n)
+          ( i (succ-‚Ñï n))
+          ( map-sequential-diagram A n))
+```
+
+### Components of a cocone under a sequential diagram
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  injection-cocone-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí family-sequential-diagram A n ‚Üí X
+  injection-cocone-sequential-diagram = pr1 c
+
+  coherence-triangle-cocone-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    coherence-triangle-maps
+      ( injection-cocone-sequential-diagram n)
+      ( injection-cocone-sequential-diagram (succ-‚Ñï n))
+      ( map-sequential-diagram A n)
+  coherence-triangle-cocone-sequential-diagram = pr2 c
+```
+
+### Homotopies of cocones under a sequential diagram
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  where
+
+  statement-coherence-htpy-cocone-sequential-diagram :
+    ( c c' : cocone-sequential-diagram A X) ‚Üí
+    ( (n : ‚Ñï) ‚Üí
+      injection-cocone-sequential-diagram A c n ~
+      injection-cocone-sequential-diagram A c' n) ‚Üí
+    UU (l1 ‚äî l2)
+  statement-coherence-htpy-cocone-sequential-diagram c c' K =
+    ( n : ‚Ñï) ‚Üí
+      ( ( coherence-triangle-cocone-sequential-diagram A c n) ‚àôh
+        ( K (succ-‚Ñï n) ¬∑r map-sequential-diagram A n)) ~
+      ( K n ‚àôh coherence-triangle-cocone-sequential-diagram A c' n)
+
+  htpy-cocone-sequential-diagram :
+    ( c c' : cocone-sequential-diagram A X) ‚Üí UU (l1 ‚äî l2)
+  htpy-cocone-sequential-diagram c c' =
+    Œ£ ( ( n : ‚Ñï) ‚Üí
+        ( injection-cocone-sequential-diagram A c n) ~
+        ( injection-cocone-sequential-diagram A c' n))
+      ( statement-coherence-htpy-cocone-sequential-diagram c c')
+```
+
+### Components of a homotopy of cocones under a sequential diagram
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c c' : cocone-sequential-diagram A X)
+  ( H : htpy-cocone-sequential-diagram A c c')
+  where
+
+  htpy-htpy-cocone-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    ( injection-cocone-sequential-diagram A c n) ~
+    ( injection-cocone-sequential-diagram A c' n)
+  htpy-htpy-cocone-sequential-diagram = pr1 H
+
+  coherence-htpy-cocone-sequential-diagram :
+    statement-coherence-htpy-cocone-sequential-diagram A c c'
+      ( htpy-htpy-cocone-sequential-diagram)
+  coherence-htpy-cocone-sequential-diagram = pr2 H
+```
+
+### Postcomposing cocones under a sequential diagram
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  cocone-map-sequential-diagram :
+    { l : Level} {Y : UU l} ‚Üí
+    ( X ‚Üí Y) ‚Üí cocone-sequential-diagram A Y
+  pr1 (cocone-map-sequential-diagram f) n =
+    f ‚àò injection-cocone-sequential-diagram A c n
+  pr2 (cocone-map-sequential-diagram f) n =
+    f ¬∑l (coherence-triangle-cocone-sequential-diagram A c n)
+```
+
+## Properties
+
+### Characterization of identity types of cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  where
+
+  reflexive-htpy-cocone-sequential-diagram :
+    ( c : cocone-sequential-diagram A X) ‚Üí htpy-cocone-sequential-diagram A c c
+  pr1 (reflexive-htpy-cocone-sequential-diagram c) n = refl-htpy
+  pr2 (reflexive-htpy-cocone-sequential-diagram c) n = right-unit-htpy
+
+  htpy-eq-cocone-sequential-diagram :
+    ( c c' : cocone-sequential-diagram A X) ‚Üí ( c Ôºù c') ‚Üí
+    htpy-cocone-sequential-diagram A c c'
+  htpy-eq-cocone-sequential-diagram c .c refl =
+    reflexive-htpy-cocone-sequential-diagram c
+
+  abstract
+    is-torsorial-htpy-cocone-sequential-diagram :
+      ( c : cocone-sequential-diagram A X) ‚Üí
+      is-contr
+        ( Œ£ ( cocone-sequential-diagram A X)
+            ( htpy-cocone-sequential-diagram A c))
+    is-torsorial-htpy-cocone-sequential-diagram c =
+      is-torsorial-Eq-structure
+        ( ev-pair (statement-coherence-htpy-cocone-sequential-diagram A c))
+        ( is-torsorial-binary-htpy (injection-cocone-sequential-diagram A c))
+        ( ( injection-cocone-sequential-diagram A c) ,
+          ( ev-pair refl-htpy))
+        ( is-torsorial-binary-htpy
+          ( Œª n ‚Üí
+            ( coherence-triangle-cocone-sequential-diagram A c n) ‚àôh
+            ( refl-htpy)))
+
+    is-equiv-htpy-eq-cocone-sequential-diagram :
+      ( c c' : cocone-sequential-diagram A X) ‚Üí
+      is-equiv (htpy-eq-cocone-sequential-diagram c c')
+    is-equiv-htpy-eq-cocone-sequential-diagram c =
+      fundamental-theorem-id
+        ( is-torsorial-htpy-cocone-sequential-diagram c)
+        ( htpy-eq-cocone-sequential-diagram c)
+
+  eq-htpy-cocone-sequential-diagram :
+    ( c c' : cocone-sequential-diagram A X) ‚Üí
+    htpy-cocone-sequential-diagram A c c' ‚Üí
+    c Ôºù c'
+  eq-htpy-cocone-sequential-diagram c c' =
+    map-inv-is-equiv (is-equiv-htpy-eq-cocone-sequential-diagram c c')
+```
+
+### Postcomposing a cocone under a sequential diagram by identity is the identity
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  cocone-map-id-sequential-diagram : cocone-map-sequential-diagram A c id Ôºù c
+  cocone-map-id-sequential-diagram =
+    eq-htpy-cocone-sequential-diagram A
+      ( cocone-map-sequential-diagram A c id)
+      ( c)
+      ( ( ev-pair refl-htpy) ,
+        ( Œª n ‚Üí
+          ( right-unit-htpy) ‚àôh
+          ( ap-id ‚àò coherence-triangle-cocone-sequential-diagram A c n)))
+```
+
+### Postcomposing cocones under a sequential colimit distributes over function composition
+
+```agda
+module _
+  { l1 l2 l3 l4 : Level} (A : sequential-diagram l1)
+  { X : UU l2} {Y : UU l3} {Z : UU l4}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  cocone-map-comp-sequential-diagram :
+    ( h : X ‚Üí Y) (k : Y ‚Üí Z) ‚Üí
+    cocone-map-sequential-diagram A c (k ‚àò h) Ôºù
+    cocone-map-sequential-diagram A (cocone-map-sequential-diagram A c h) k
+  cocone-map-comp-sequential-diagram h k =
+    eq-htpy-cocone-sequential-diagram A
+      ( cocone-map-sequential-diagram A c (k ‚àò h))
+      ( cocone-map-sequential-diagram A (cocone-map-sequential-diagram A c h) k)
+      ( ( ev-pair refl-htpy) ,
+        ( Œª n ‚Üí
+          ( right-unit-htpy) ‚àôh
+          ( ap-comp k h ‚àò coherence-triangle-cocone-sequential-diagram A c n)))
+```
+
+### Cocones under sequential diagrams are a special case of coequalizers
+
+```agda
+module _
+  { l1 : Level} (A : sequential-diagram l1)
+  where
+
+  bottom-map-cofork-cocone-sequential-diagram :
+    Œ£ ‚Ñï (family-sequential-diagram A) ‚Üí Œ£ ‚Ñï (family-sequential-diagram A)
+  bottom-map-cofork-cocone-sequential-diagram = id
+
+  top-map-cofork-cocone-sequential-diagram :
+    Œ£ ‚Ñï (family-sequential-diagram A) ‚Üí Œ£ ‚Ñï (family-sequential-diagram A)
+  top-map-cofork-cocone-sequential-diagram =
+    map-Œ£
+      ( family-sequential-diagram A)
+      ( succ-‚Ñï)
+      ( map-sequential-diagram A)
+
+  module _
+    { l2 : Level} {X : UU l2}
+    where
+
+    cofork-cocone-sequential-diagram :
+      cocone-sequential-diagram A X ‚Üí
+      cofork
+        ( bottom-map-cofork-cocone-sequential-diagram)
+        ( top-map-cofork-cocone-sequential-diagram)
+        ( X)
+    pr1 (cofork-cocone-sequential-diagram c) =
+      ind-Œ£ (injection-cocone-sequential-diagram A c)
+    pr2 (cofork-cocone-sequential-diagram c) =
+      ind-Œ£ (coherence-triangle-cocone-sequential-diagram A c)
+
+    cocone-sequential-diagram-cofork :
+      cofork
+        ( bottom-map-cofork-cocone-sequential-diagram)
+        ( top-map-cofork-cocone-sequential-diagram)
+        ( X) ‚Üí
+      cocone-sequential-diagram A X
+    pr1 (cocone-sequential-diagram-cofork e) =
+      ev-pair
+        ( map-cofork
+          ( bottom-map-cofork-cocone-sequential-diagram)
+          ( top-map-cofork-cocone-sequential-diagram)
+          ( e))
+    pr2 (cocone-sequential-diagram-cofork e) =
+      ev-pair
+        ( coherence-cofork
+          ( bottom-map-cofork-cocone-sequential-diagram)
+          ( top-map-cofork-cocone-sequential-diagram)
+          ( e))
+
+    abstract
+      is-section-cofork-cocone-sequential-diagram :
+        cocone-sequential-diagram-cofork ‚àò cofork-cocone-sequential-diagram ~ id
+      is-section-cofork-cocone-sequential-diagram c =
+        eq-htpy-cocone-sequential-diagram A
+          ( cocone-sequential-diagram-cofork
+            ( cofork-cocone-sequential-diagram c))
+          ( c)
+          ( ev-pair refl-htpy ,
+            ev-pair right-unit-htpy)
+
+      is-retraction-cofork-cocone-sequential-diagram :
+        cofork-cocone-sequential-diagram ‚àò cocone-sequential-diagram-cofork ~ id
+      is-retraction-cofork-cocone-sequential-diagram e =
+        eq-htpy-cofork
+          ( bottom-map-cofork-cocone-sequential-diagram)
+          ( top-map-cofork-cocone-sequential-diagram)
+          ( cofork-cocone-sequential-diagram
+            ( cocone-sequential-diagram-cofork e))
+          ( e)
+          ( refl-htpy , right-unit-htpy)
+
+    is-equiv-cofork-cocone-sequential-diagram :
+      is-equiv cofork-cocone-sequential-diagram
+    is-equiv-cofork-cocone-sequential-diagram =
+      is-equiv-is-invertible
+        ( cocone-sequential-diagram-cofork)
+        ( is-retraction-cofork-cocone-sequential-diagram)
+        ( is-section-cofork-cocone-sequential-diagram)
+
+    equiv-cofork-cocone-sequential-diagram :
+      cocone-sequential-diagram A X ‚âÉ
+      cofork
+        ( bottom-map-cofork-cocone-sequential-diagram)
+        ( top-map-cofork-cocone-sequential-diagram)
+        ( X)
+    pr1 equiv-cofork-cocone-sequential-diagram =
+      cofork-cocone-sequential-diagram
+    pr2 equiv-cofork-cocone-sequential-diagram =
+      is-equiv-cofork-cocone-sequential-diagram
+
+  triangle-cocone-sequential-diagram-cofork :
+    { l2 l3 : Level} {X : UU l2} {Y : UU l3} ‚Üí
+    ( c : cocone-sequential-diagram A X) ‚Üí
+    coherence-triangle-maps
+      ( cocone-map-sequential-diagram A c {Y = Y})
+      ( cocone-sequential-diagram-cofork)
+      ( cofork-map
+        ( bottom-map-cofork-cocone-sequential-diagram)
+        ( top-map-cofork-cocone-sequential-diagram)
+        ( cofork-cocone-sequential-diagram c))
+  triangle-cocone-sequential-diagram-cofork c h =
+    eq-htpy-cocone-sequential-diagram A
+      ( cocone-map-sequential-diagram A c h)
+      ( cocone-sequential-diagram-cofork
+        ( cofork-map
+          ( bottom-map-cofork-cocone-sequential-diagram)
+          ( top-map-cofork-cocone-sequential-diagram)
+          ( cofork-cocone-sequential-diagram c)
+          ( h)))
+      ( ev-pair refl-htpy ,
+        ev-pair right-unit-htpy)
+```
+
+## References
+
+1. Kristina Sojakova, Floris van Doorn, and Egbert Rijke. 2020. Sequential
+   Colimits in Homotopy Type Theory. In Proceedings of the 35th Annual ACM/IEEE
+   Symposium on Logic in Computer Science (LICS '20). Association for Computing
+   Machinery, New York, NY, USA, 845‚Äì858,
+   [DOI:10.1145](https://doi.org/10.1145/3373718.3394801)
diff --git a/src/synthetic-homotopy-theory/coforks.lagda.md b/src/synthetic-homotopy-theory/coforks.lagda.md
index 47a9930c6c..afb115fd7a 100644
--- a/src/synthetic-homotopy-theory/coforks.lagda.md
+++ b/src/synthetic-homotopy-theory/coforks.lagda.md
@@ -179,7 +179,7 @@ module _
     eq-htpy-cofork f g
       ( cofork-map f g e id)
       ( e)
-      (refl-htpy , (right-unit-htpy ‚àôh (ap-id ‚àò coherence-cofork f g e)))
+      ( refl-htpy , (right-unit-htpy ‚àôh (ap-id ‚àò coherence-cofork f g e)))
 ```
 
 ### Postcomposing coforks distributes over function composition
diff --git a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
new file mode 100644
index 0000000000..61a95b6202
--- /dev/null
+++ b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
@@ -0,0 +1,54 @@
+# Sequential diagrams
+
+```agda
+module synthetic-homotopy-theory.sequential-diagrams where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import elementary-number-theory.natural-numbers
+
+open import foundation.commuting-squares-of-maps
+open import foundation.dependent-pair-types
+open import foundation.universe-levels
+```
+
+</details>
+
+## Idea
+
+A **sequential diagram** `(A, a)` is a family of types `A : ‚Ñï ‚Üí ùì§` over the
+natural numbers, equipped with a family of maps `a‚Çô : A n ‚Üí A (n + 1)` for all
+`n`.
+
+## Definition
+
+```agda
+sequential-diagram : (l : Level) ‚Üí UU (lsuc l)
+sequential-diagram l = Œ£ (‚Ñï ‚Üí UU l) (Œª A ‚Üí (n : ‚Ñï) ‚Üí A n ‚Üí A (succ-‚Ñï n))
+
+module _
+  { l : Level} (A : sequential-diagram l)
+  where
+
+  family-sequential-diagram : ‚Ñï ‚Üí UU l
+  family-sequential-diagram = pr1 A
+
+  map-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    family-sequential-diagram n ‚Üí family-sequential-diagram (succ-‚Ñï n)
+  map-sequential-diagram = pr2 A
+```
+
+## Properties
+
+## See also
+
+## References
+
+1. Kristina Sojakova, Floris van Doorn, and Egbert Rijke. 2020. Sequential
+   Colimits in Homotopy Type Theory. In Proceedings of the 35th Annual ACM/IEEE
+   Symposium on Logic in Computer Science (LICS '20). Association for Computing
+   Machinery, New York, NY, USA, 845‚Äì858,
+   [DOI:10.1145](https://doi.org/10.1145/3373718.3394801)

From 163a1a025dcdc2bba64da33835aa716d313b3fe6 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sat, 14 Oct 2023 23:33:04 +0200
Subject: [PATCH 02/28] pre-commit

---
 src/synthetic-homotopy-theory.lagda.md                        | 2 ++
 .../cocones-under-sequential-diagrams.lagda.md                | 4 ++--
 src/synthetic-homotopy-theory/sequential-diagrams.lagda.md    | 3 ---
 3 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index 0905d11402..a34cda7a42 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -13,6 +13,7 @@ open import synthetic-homotopy-theory.acyclic-types public
 open import synthetic-homotopy-theory.category-of-connected-set-bundles-circle public
 open import synthetic-homotopy-theory.cavallos-trick public
 open import synthetic-homotopy-theory.circle public
+open import synthetic-homotopy-theory.cocones-under-sequential-diagrams public
 open import synthetic-homotopy-theory.cocones-under-spans public
 open import synthetic-homotopy-theory.cocones-under-spans-of-pointed-types public
 open import synthetic-homotopy-theory.codiagonals-of-maps public
@@ -64,6 +65,7 @@ open import synthetic-homotopy-theory.pullback-property-pushouts public
 open import synthetic-homotopy-theory.pushouts public
 open import synthetic-homotopy-theory.pushouts-of-pointed-types public
 open import synthetic-homotopy-theory.sections-descent-circle public
+open import synthetic-homotopy-theory.sequential-diagrams public
 open import synthetic-homotopy-theory.smash-products-of-pointed-types public
 open import synthetic-homotopy-theory.spectra public
 open import synthetic-homotopy-theory.sphere-prespectrum public
diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index 9aac6524b4..5938f74d66 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -37,8 +37,8 @@ open import synthetic-homotopy-theory.sequential-diagrams
 
 A **cocone under a
 [sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)
-`(A, a)`** with vertex `X : ùì§` consists of a family of maps `i‚Çô : A n ‚Üí C` and
-a family of [homotopies](foundation.homotopies.md) `H‚Çô` asserting that the
+`(A, a)`** with vertex `X : ùì§` consists of a family of maps `i‚Çô : A n ‚Üí C` and a
+family of [homotopies](foundation.homotopies.md) `H‚Çô` asserting that the
 triangles
 
 ```text
diff --git a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
index 61a95b6202..0ff3a499ee 100644
--- a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
@@ -41,9 +41,6 @@ module _
   map-sequential-diagram = pr2 A
 ```
 
-## Properties
-
-## See also
 
 ## References
 

From 0273ce941ffce34a121661ec1e764d4657c46f91 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 15 Oct 2023 11:13:00 +0200
Subject: [PATCH 03/28] Logical equivalence of dependent and non-dependent UP
 of coequalizers

---
 ...t-universal-property-coequalizers.lagda.md | 28 +++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
index 00583ad9ed..9f3d03fc28 100644
--- a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
@@ -15,6 +15,7 @@ open import foundation.fibers-of-maps
 open import foundation.functoriality-dependent-pair-types
 open import foundation.universe-levels
 
+open import synthetic-homotopy-theory.26-descent
 open import synthetic-homotopy-theory.coforks
 open import synthetic-homotopy-theory.dependent-cocones-under-spans
 open import synthetic-homotopy-theory.dependent-coforks
@@ -194,3 +195,30 @@ module _
       ( is-equiv-dependent-cofork-dependent-cocone-codiagonal f g e P)
       ( dup-coequalizer P)
 ```
+
+### The universal property of coequalizers implies the dependent universal property of coequalizers
+
+```agda
+module _
+  { l1 l2 l3 : Level} {A : UU l1} {B : UU l2} (f g : A ‚Üí B) {X : UU l3}
+  ( e : cofork f g X)
+  where
+
+  dependent-universal-property-universal-property-coequalizer :
+    ( {l : Level} ‚Üí universal-property-coequalizer l f g e) ‚Üí
+    ( {l : Level} ‚Üí dependent-universal-property-coequalizer l f g e)
+  dependent-universal-property-universal-property-coequalizer up-coequalizer =
+    dependent-universal-property-coequalizer-dependent-universal-property-pushout
+      ( f)
+      ( g)
+      ( e)
+      ( Œª {l : Level} ‚Üí
+        dependent-universal-property-universal-property-pushout
+          ( vertical-map-span-cocone-cofork f g)
+          ( horizontal-map-span-cocone-cofork f g)
+          ( cocone-codiagonal-cofork f g e)
+          ( Œª l ‚Üí
+            universal-property-pushout-universal-property-coequalizer f g e
+              ( up-coequalizer))
+          ( l))
+```

From d02aeee4c39ef9fbe7357c4ef3341c2574dbe57f Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 15 Oct 2023 21:53:50 +0200
Subject: [PATCH 04/28] Organization of DUP<->UP for coequalizers

---
 ...t-universal-property-coequalizers.lagda.md | 41 ++++++++-----------
 1 file changed, 16 insertions(+), 25 deletions(-)

diff --git a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
index 9f3d03fc28..5447256ae1 100644
--- a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
@@ -111,30 +111,6 @@ module _
         ( is-contr-map-is-equiv (dup-coequalizer P) k)
 ```
 
-### The dependent universal property of coequializers implies the universal property of coequalizers
-
-```agda
-module _
-  { l1 l2 l3 : Level} {A : UU l1} {B : UU l2} (f g : A ‚Üí B) {X : UU l3}
-  ( e : cofork f g X)
-  where
-
-  universal-property-dependent-universal-property-coequalizer :
-    ( {l : Level} ‚Üí dependent-universal-property-coequalizer l f g e) ‚Üí
-    ( {l : Level} ‚Üí universal-property-coequalizer l f g e)
-  universal-property-dependent-universal-property-coequalizer
-    ( dup-coequalizer)
-    ( Y) =
-      is-equiv-comp-htpy
-        ( cofork-map f g e)
-        ( map-compute-dependent-cofork-constant-family f g e Y)
-        ( dependent-cofork-map f g e)
-        ( triangle-compute-dependent-cofork-constant-family f g e Y)
-        ( dup-coequalizer (Œª _ ‚Üí Y))
-        ( is-equiv-map-equiv
-          ( compute-dependent-cofork-constant-family f g e Y))
-```
-
 ### A cofork has the dependent universal property of coequalizers if and only if the corresponding cocone has the dependent universal property of pushouts
 
 As mentioned in [coforks](synthetic-homotopy-theory.coforks.md), coforks can be
@@ -196,7 +172,7 @@ module _
       ( dup-coequalizer P)
 ```
 
-### The universal property of coequalizers implies the dependent universal property of coequalizers
+### The universal property of coequalizers is equivalent to the dependent universal property of coequalizers
 
 ```agda
 module _
@@ -204,6 +180,21 @@ module _
   ( e : cofork f g X)
   where
 
+  universal-property-dependent-universal-property-coequalizer :
+    ( {l : Level} ‚Üí dependent-universal-property-coequalizer l f g e) ‚Üí
+    ( {l : Level} ‚Üí universal-property-coequalizer l f g e)
+  universal-property-dependent-universal-property-coequalizer
+    ( dup-coequalizer)
+    ( Y) =
+      is-equiv-comp-htpy
+        ( cofork-map f g e)
+        ( map-compute-dependent-cofork-constant-family f g e Y)
+        ( dependent-cofork-map f g e)
+        ( triangle-compute-dependent-cofork-constant-family f g e Y)
+        ( dup-coequalizer (Œª _ ‚Üí Y))
+        ( is-equiv-map-equiv
+          ( compute-dependent-cofork-constant-family f g e Y))
+
   dependent-universal-property-universal-property-coequalizer :
     ( {l : Level} ‚Üí universal-property-coequalizer l f g e) ‚Üí
     ( {l : Level} ‚Üí dependent-universal-property-coequalizer l f g e)

From 7026ac8404e879f23f67313555575c0bc7e3a952 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 15 Oct 2023 23:02:20 +0200
Subject: [PATCH 05/28] Dependent sequential diagrams

---
 src/synthetic-homotopy-theory.lagda.md        |   1 +
 .../dependent-sequential-diagrams.lagda.md    | 135 ++++++++++++++++++
 .../sequential-diagrams.lagda.md              |   7 +-
 3 files changed, 139 insertions(+), 4 deletions(-)
 create mode 100644 src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index a34cda7a42..28a111f910 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -26,6 +26,7 @@ open import synthetic-homotopy-theory.dependent-cocones-under-spans public
 open import synthetic-homotopy-theory.dependent-coforks public
 open import synthetic-homotopy-theory.dependent-descent-circle public
 open import synthetic-homotopy-theory.dependent-pullback-property-pushouts public
+open import synthetic-homotopy-theory.dependent-sequential-diagrams public
 open import synthetic-homotopy-theory.dependent-suspension-structures public
 open import synthetic-homotopy-theory.dependent-universal-property-coequalizers public
 open import synthetic-homotopy-theory.dependent-universal-property-pushouts public
diff --git a/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
new file mode 100644
index 0000000000..fbdbeebea5
--- /dev/null
+++ b/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
@@ -0,0 +1,135 @@
+# Dependent sequential diagrams
+
+```agda
+module synthetic-homotopy-theory.dependent-sequential-diagrams where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import elementary-number-theory.natural-numbers
+
+open import foundation.dependent-pair-types
+open import foundation.function-types
+open import foundation.homotopies
+open import foundation.universe-levels
+
+open import synthetic-homotopy-theory.sequential-diagrams
+```
+
+</details>
+
+## Idea
+
+A **dependent sequential diagram** over a
+[sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md) `(A, a)`
+is a [sequence](foundation.dependent-sequences.md) of families of types
+`B : (n : ‚Ñï) ‚Üí A n ‚Üí ùì§` over the types in the base sequential diagram, equipped
+with fiberwise maps
+
+```text
+b‚Çô : (x : A n) ‚Üí B n x ‚Üí B (n + 1) (a‚Çô x).
+```
+
+## Definitions
+
+### Dependent sequential diagrams
+
+```agda
+dependent-sequential-diagram :
+  { l1 : Level} ‚Üí (A : sequential-diagram l1) ‚Üí
+  ( l2 : Level) ‚Üí UU (l1 ‚äî lsuc l2)
+dependent-sequential-diagram A l2 =
+  Œ£ ( ( n : ‚Ñï) ‚Üí family-sequential-diagram A n ‚Üí UU l2)
+    ( Œª B ‚Üí
+      ( n : ‚Ñï) (x : family-sequential-diagram A n) ‚Üí
+      B n x ‚Üí B (succ-‚Ñï n) (map-sequential-diagram A n x))
+```
+
+### Components of a dependent sequential diagram
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1)
+  ( B : dependent-sequential-diagram A l2)
+  where
+
+  family-dependent-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí family-sequential-diagram A n ‚Üí UU l2
+  family-dependent-sequential-diagram = pr1 B
+
+  map-dependent-sequential-diagram :
+    ( n : ‚Ñï) (x : family-sequential-diagram A n) ‚Üí
+    family-dependent-sequential-diagram n x ‚Üí
+    family-dependent-sequential-diagram
+      ( succ-‚Ñï n)
+      ( map-sequential-diagram A n x)
+  map-dependent-sequential-diagram = pr2 B
+```
+
+### Constant dependent sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
+  where
+
+  constant-dependent-sequential-diagram : dependent-sequential-diagram A l2
+  pr1 constant-dependent-sequential-diagram n _ = family-sequential-diagram B n
+  pr2 constant-dependent-sequential-diagram n _ = map-sequential-diagram B n
+```
+
+### Sections of dependent sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1)
+  ( B : dependent-sequential-diagram A l2)
+  where
+
+  naturality-section-dependent-sequential-diagram :
+    ( s :
+      ( n : ‚Ñï) (x : family-sequential-diagram A n) ‚Üí
+      family-dependent-sequential-diagram A B n x) ‚Üí
+    ‚Ñï ‚Üí UU (l1 ‚äî l2)
+  naturality-section-dependent-sequential-diagram s n =
+    ( map-dependent-sequential-diagram A B n _ ‚àò s n) ~
+    ( s (succ-‚Ñï n) ‚àò map-sequential-diagram A n)
+
+  section-dependent-sequential-diagram : UU (l1 ‚äî l2)
+  section-dependent-sequential-diagram =
+    Œ£ ( ( n : ‚Ñï) (x : family-sequential-diagram A n) ‚Üí
+        family-dependent-sequential-diagram A B n x)
+      ( Œª s ‚Üí (n : ‚Ñï) ‚Üí naturality-section-dependent-sequential-diagram s n)
+```
+
+### Components of sections of dependent sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1)
+  ( B : dependent-sequential-diagram A l2)
+  ( s : section-dependent-sequential-diagram A B)
+  where
+
+  map-section-dependent-sequential-diagram :
+    ( n : ‚Ñï) (x : family-sequential-diagram A n) ‚Üí
+    family-dependent-sequential-diagram A B n x
+  map-section-dependent-sequential-diagram = pr1 s
+
+  naturality-map-section-dependent-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    ( map-dependent-sequential-diagram A B n _ ‚àò
+      map-section-dependent-sequential-diagram n) ~
+    ( map-section-dependent-sequential-diagram (succ-‚Ñï n) ‚àò
+      map-sequential-diagram A n)
+  naturality-map-section-dependent-sequential-diagram = pr2 s
+```
+
+## References
+
+1. Kristina Sojakova, Floris van Doorn, and Egbert Rijke. 2020. Sequential
+   Colimits in Homotopy Type Theory. In Proceedings of the 35th Annual ACM/IEEE
+   Symposium on Logic in Computer Science (LICS '20). Association for Computing
+   Machinery, New York, NY, USA, 845‚Äì858,
+   [DOI:10.1145](https://doi.org/10.1145/3373718.3394801)
diff --git a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
index 0ff3a499ee..6199415394 100644
--- a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
@@ -18,9 +18,9 @@ open import foundation.universe-levels
 
 ## Idea
 
-A **sequential diagram** `(A, a)` is a family of types `A : ‚Ñï ‚Üí ùì§` over the
-natural numbers, equipped with a family of maps `a‚Çô : A n ‚Üí A (n + 1)` for all
-`n`.
+A **sequential diagram** `(A, a)` is a [sequence](foundation.sequences.md) of
+types `A : ‚Ñï ‚Üí ùì§` over the natural numbers, equipped with a family of maps
+`a‚Çô : A n ‚Üí A (n + 1)` for all `n`.
 
 ## Definition
 
@@ -41,7 +41,6 @@ module _
   map-sequential-diagram = pr2 A
 ```
 
-
 ## References
 
 1. Kristina Sojakova, Floris van Doorn, and Egbert Rijke. 2020. Sequential

From a94a89721f7354182e4de88034eadc7873bcd71c Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Mon, 16 Oct 2023 23:58:58 +0200
Subject: [PATCH 06/28] Morphisms of sequential diagrams

---
 src/synthetic-homotopy-theory.lagda.md        |   1 +
 .../morphisms-sequential-diagrams.lagda.md    | 217 ++++++++++++++++++
 2 files changed, 218 insertions(+)
 create mode 100644 src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index 28a111f910..673f0ca3b4 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -57,6 +57,7 @@ open import synthetic-homotopy-theory.loop-spaces public
 open import synthetic-homotopy-theory.maps-of-prespectra public
 open import synthetic-homotopy-theory.mere-spheres public
 open import synthetic-homotopy-theory.morphisms-descent-data-circle public
+open import synthetic-homotopy-theory.morphisms-sequential-diagrams public
 open import synthetic-homotopy-theory.multiplication-circle public
 open import synthetic-homotopy-theory.plus-principle public
 open import synthetic-homotopy-theory.powers-of-loops public
diff --git a/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
new file mode 100644
index 0000000000..cc4f195e4f
--- /dev/null
+++ b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
@@ -0,0 +1,217 @@
+# Morphisms of sequential diagrams
+
+```agda
+module synthetic-homotopy-theory.morphisms-sequential-diagrams where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import elementary-number-theory.natural-numbers
+
+open import foundation.binary-homotopies
+open import foundation.commuting-squares-of-homotopies
+open import foundation.commuting-squares-of-maps
+open import foundation.contractible-types
+open import foundation.dependent-pair-types
+open import foundation.equality-dependent-function-types
+open import foundation.equivalences
+open import foundation.function-types
+open import foundation.fundamental-theorem-of-identity-types
+open import foundation.homotopies
+open import foundation.homotopy-induction
+open import foundation.identity-types
+open import foundation.structure-identity-principle
+open import foundation.universe-levels
+open import foundation.whiskering-homotopies
+
+open import synthetic-homotopy-theory.dependent-sequential-diagrams
+open import synthetic-homotopy-theory.sequential-diagrams
+```
+
+</details>
+
+## Definitions
+
+### Morphisms of sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
+  where
+
+  hom-sequential-diagram : UU (l1 ‚äî l2)
+  hom-sequential-diagram =
+    section-dependent-sequential-diagram A
+      ( constant-dependent-sequential-diagram A B)
+```
+
+### Components of morphisms of sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} {A : sequential-diagram l1} (B : sequential-diagram l2)
+  ( h : hom-sequential-diagram A B)
+  where
+
+  map-hom-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí family-sequential-diagram A n ‚Üí family-sequential-diagram B n
+  map-hom-sequential-diagram =
+    map-section-dependent-sequential-diagram A
+      ( constant-dependent-sequential-diagram A B)
+      ( h)
+
+  naturality-map-hom-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    ( map-sequential-diagram B n ‚àò map-hom-sequential-diagram n) ~
+    ( map-hom-sequential-diagram (succ-‚Ñï n) ‚àò map-sequential-diagram A n)
+  naturality-map-hom-sequential-diagram =
+    naturality-map-section-dependent-sequential-diagram A
+      ( constant-dependent-sequential-diagram A B)
+      ( h)
+```
+
+### The identity morphism of sequential diagrams
+
+```agda
+module _
+  { l1 : Level} (A : sequential-diagram l1)
+  where
+
+  id-hom-sequential-diagram : hom-sequential-diagram A A
+  pr1 id-hom-sequential-diagram n = id
+  pr2 id-hom-sequential-diagram n = refl-htpy
+```
+
+### Composition of morphisms of sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
+  ( C : sequential-diagram l3)
+  where
+
+  comp-hom-sequential-diagram :
+    hom-sequential-diagram B C ‚Üí
+    hom-sequential-diagram A B ‚Üí
+    hom-sequential-diagram A C
+  pr1 (comp-hom-sequential-diagram g f) n =
+    map-hom-sequential-diagram C g n ‚àò map-hom-sequential-diagram B f n
+  pr2 (comp-hom-sequential-diagram g f) n =
+    pasting-vertical-coherence-square-maps
+      ( map-sequential-diagram A n)
+      ( map-hom-sequential-diagram B f n)
+      ( map-hom-sequential-diagram B f (succ-‚Ñï n))
+      ( map-sequential-diagram B n)
+      ( map-hom-sequential-diagram C g n)
+      ( map-hom-sequential-diagram C g (succ-‚Ñï n))
+      ( map-sequential-diagram C n)
+      ( naturality-map-hom-sequential-diagram B f n)
+      ( naturality-map-hom-sequential-diagram C g n)
+```
+
+### Homotopies between morphisms of sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} {A : sequential-diagram l1} (B : sequential-diagram l2)
+  ( f g : hom-sequential-diagram A B)
+  where
+
+  coherence-htpy-sequential-diagram :
+    ( H :
+      ( n : ‚Ñï) ‚Üí
+      ( map-hom-sequential-diagram B f n) ~
+      ( map-hom-sequential-diagram B g n)) ‚Üí
+    UU (l1 ‚äî l2)
+  coherence-htpy-sequential-diagram H =
+    ( n : ‚Ñï) ‚Üí
+    coherence-square-homotopies
+      ( naturality-map-hom-sequential-diagram B f n)
+      ( H (succ-‚Ñï n) ¬∑r map-sequential-diagram A n)
+      ( map-sequential-diagram B n ¬∑l H n)
+      ( naturality-map-hom-sequential-diagram B g n)
+
+  htpy-hom-sequential-diagram : UU (l1 ‚äî l2)
+  htpy-hom-sequential-diagram =
+    Œ£ ( ( n : ‚Ñï) ‚Üí
+        ( map-hom-sequential-diagram B f n) ~
+        ( map-hom-sequential-diagram B g n))
+      ( coherence-htpy-sequential-diagram)
+```
+
+### Components of homotopies between morphisms of sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} {A : sequential-diagram l1} (B : sequential-diagram l2)
+  { f g : hom-sequential-diagram A B}
+  ( H : htpy-hom-sequential-diagram B f g)
+  where
+
+  htpy-htpy-hom-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    ( map-hom-sequential-diagram B f n) ~
+    ( map-hom-sequential-diagram B g n)
+  htpy-htpy-hom-sequential-diagram = pr1 H
+
+  coherence-htpy-htpy-hom-sequential-diagram :
+    coherence-htpy-sequential-diagram B f g htpy-htpy-hom-sequential-diagram
+  coherence-htpy-htpy-hom-sequential-diagram = pr2 H
+```
+
+## Properties
+
+### Characterization of equality of morphisms of sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
+  where
+
+  reflexive-htpy-hom-sequential-diagram :
+    ( f : hom-sequential-diagram A B) ‚Üí htpy-hom-sequential-diagram B f f
+  pr1 (reflexive-htpy-hom-sequential-diagram f) = ev-pair refl-htpy
+  pr2 (reflexive-htpy-hom-sequential-diagram f) = ev-pair right-unit-htpy
+
+  htpy-eq-sequential-diagram :
+    ( f f' : hom-sequential-diagram A B) ‚Üí
+    ( f Ôºù f') ‚Üí htpy-hom-sequential-diagram B f f'
+  htpy-eq-sequential-diagram f .f refl = reflexive-htpy-hom-sequential-diagram f
+
+  abstract
+    is-torsorial-htpy-sequential-diagram :
+      ( f : hom-sequential-diagram A B) ‚Üí
+      is-contr
+        ( Œ£ (hom-sequential-diagram A B) (htpy-hom-sequential-diagram B f))
+    is-torsorial-htpy-sequential-diagram f =
+      is-torsorial-Eq-structure
+        ( ev-pair (coherence-htpy-sequential-diagram B f))
+        ( is-torsorial-binary-htpy (map-hom-sequential-diagram B f))
+        ( map-hom-sequential-diagram B f , ev-pair refl-htpy)
+        ( is-torsorial-Eq-Œ† _
+          ( Œª n ‚Üí
+            is-torsorial-htpy
+              ( naturality-map-hom-sequential-diagram B f n ‚àôh refl-htpy)))
+
+    is-equiv-htpy-eq-sequential-diagram :
+      ( f f' : hom-sequential-diagram A B) ‚Üí
+      is-equiv (htpy-eq-sequential-diagram f f')
+    is-equiv-htpy-eq-sequential-diagram f =
+      fundamental-theorem-id
+        ( is-torsorial-htpy-sequential-diagram f)
+        ( htpy-eq-sequential-diagram f)
+
+  extensionality-sequential-diagram :
+    ( f f' : hom-sequential-diagram A B) ‚Üí
+    ( f Ôºù f') ‚âÉ htpy-hom-sequential-diagram B f f'
+  pr1 (extensionality-sequential-diagram f f') = htpy-eq-sequential-diagram f f'
+  pr2 (extensionality-sequential-diagram f f') =
+    is-equiv-htpy-eq-sequential-diagram f f'
+
+  eq-htpy-sequential-diagram :
+    ( f f' : hom-sequential-diagram A B) ‚Üí
+    htpy-hom-sequential-diagram B f f' ‚Üí (f Ôºù f')
+  eq-htpy-sequential-diagram f f' =
+    map-inv-equiv (extensionality-sequential-diagram f f')
+```

From e017be82f503adcade1894e67e7f36f6c9bdaef5 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Tue, 17 Oct 2023 20:25:04 +0200
Subject: [PATCH 07/28] Equivalences of sequential diagrams

---
 src/synthetic-homotopy-theory.lagda.md        |   1 +
 .../dependent-sequential-diagrams.lagda.md    |  14 +-
 .../equivalences-sequential-diagrams.lagda.md | 155 ++++++++++++++++++
 .../morphisms-sequential-diagrams.lagda.md    |  23 ++-
 .../sequential-diagrams.lagda.md              |   6 +
 5 files changed, 184 insertions(+), 15 deletions(-)
 create mode 100644 src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index 673f0ca3b4..498937137d 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -39,6 +39,7 @@ open import synthetic-homotopy-theory.descent-circle-function-types public
 open import synthetic-homotopy-theory.descent-circle-subtypes public
 open import synthetic-homotopy-theory.double-loop-spaces public
 open import synthetic-homotopy-theory.eckmann-hilton-argument public
+open import synthetic-homotopy-theory.equivalences-sequential-diagrams public
 open import synthetic-homotopy-theory.flattening-lemma-coequalizers public
 open import synthetic-homotopy-theory.flattening-lemma-pushouts public
 open import synthetic-homotopy-theory.free-loops public
diff --git a/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
index fbdbeebea5..c5f73a7a7e 100644
--- a/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
@@ -91,8 +91,9 @@ module _
     ( s :
       ( n : ‚Ñï) (x : family-sequential-diagram A n) ‚Üí
       family-dependent-sequential-diagram A B n x) ‚Üí
-    ‚Ñï ‚Üí UU (l1 ‚äî l2)
-  naturality-section-dependent-sequential-diagram s n =
+    UU (l1 ‚äî l2)
+  naturality-section-dependent-sequential-diagram s =
+    ( n : ‚Ñï) ‚Üí
     ( map-dependent-sequential-diagram A B n _ ‚àò s n) ~
     ( s (succ-‚Ñï n) ‚àò map-sequential-diagram A n)
 
@@ -100,7 +101,7 @@ module _
   section-dependent-sequential-diagram =
     Œ£ ( ( n : ‚Ñï) (x : family-sequential-diagram A n) ‚Üí
         family-dependent-sequential-diagram A B n x)
-      ( Œª s ‚Üí (n : ‚Ñï) ‚Üí naturality-section-dependent-sequential-diagram s n)
+      ( Œª s ‚Üí naturality-section-dependent-sequential-diagram s)
 ```
 
 ### Components of sections of dependent sequential diagrams
@@ -118,11 +119,8 @@ module _
   map-section-dependent-sequential-diagram = pr1 s
 
   naturality-map-section-dependent-sequential-diagram :
-    ( n : ‚Ñï) ‚Üí
-    ( map-dependent-sequential-diagram A B n _ ‚àò
-      map-section-dependent-sequential-diagram n) ~
-    ( map-section-dependent-sequential-diagram (succ-‚Ñï n) ‚àò
-      map-sequential-diagram A n)
+    naturality-section-dependent-sequential-diagram A B
+      map-section-dependent-sequential-diagram
   naturality-map-section-dependent-sequential-diagram = pr2 s
 ```
 
diff --git a/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
new file mode 100644
index 0000000000..3bb3e9162c
--- /dev/null
+++ b/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
@@ -0,0 +1,155 @@
+# Equivalences of sequential diagrams
+
+```agda
+module synthetic-homotopy-theory.equivalences-sequential-diagrams where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import elementary-number-theory.natural-numbers
+
+open import foundation.contractible-types
+open import foundation.dependent-pair-types
+open import foundation.equality-dependent-function-types
+open import foundation.equivalences
+open import foundation.function-types
+open import foundation.fundamental-theorem-of-identity-types
+open import foundation.homotopies
+open import foundation.homotopy-induction
+open import foundation.identity-types
+open import foundation.structure-identity-principle
+open import foundation.univalence
+open import foundation.universe-levels
+
+open import synthetic-homotopy-theory.morphisms-sequential-diagrams
+open import synthetic-homotopy-theory.sequential-diagrams
+```
+
+</details>
+
+## Definitions
+
+### Equivalences of sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
+  where
+
+  equiv-sequential-diagram : UU (l1 ‚äî l2)
+  equiv-sequential-diagram =
+    Œ£ ( ( n : ‚Ñï) ‚Üí
+        family-sequential-diagram A n ‚âÉ family-sequential-diagram B n)
+      ( Œª e ‚Üí naturality-hom-sequential-diagram A B (map-equiv ‚àò e))
+```
+
+### Components of equivalences of sequential diagrams
+
+```agda
+module _
+  { l1 l2 : Level} {A : sequential-diagram l1} (B : sequential-diagram l2)
+  ( e : equiv-sequential-diagram A B)
+  where
+
+  equiv-equiv-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    family-sequential-diagram A n ‚âÉ family-sequential-diagram B n
+  equiv-equiv-sequential-diagram = pr1 e
+
+  hom-equiv-sequential-diagram : hom-sequential-diagram A B
+  pr1 hom-equiv-sequential-diagram n =
+    map-equiv (equiv-equiv-sequential-diagram n)
+  pr2 hom-equiv-sequential-diagram = pr2 e
+
+  map-equiv-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    family-sequential-diagram A n ‚Üí family-sequential-diagram B n
+  map-equiv-sequential-diagram n = map-equiv (equiv-equiv-sequential-diagram n)
+
+  is-equiv-map-equiv-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    is-equiv (map-equiv-sequential-diagram n)
+  is-equiv-map-equiv-sequential-diagram n =
+    is-equiv-map-equiv (equiv-equiv-sequential-diagram n)
+```
+
+### The identity equivalence of sequential diagrams
+
+```agda
+module _
+  { l1 : Level} (A : sequential-diagram l1)
+  where
+
+  id-equiv-sequential-diagram : equiv-sequential-diagram A A
+  pr1 id-equiv-sequential-diagram n = id-equiv
+  pr2 id-equiv-sequential-diagram n = refl-htpy
+```
+
+### Composition of equivalences of sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
+  ( C : sequential-diagram l3)
+  where
+
+  comp-equiv-sequential-diagram :
+    equiv-sequential-diagram B C ‚Üí
+    equiv-sequential-diagram A B ‚Üí
+    equiv-sequential-diagram A C
+  pr1 (comp-equiv-sequential-diagram e e') n =
+    ( equiv-equiv-sequential-diagram C e n) ‚àòe
+    ( equiv-equiv-sequential-diagram B e' n)
+  pr2 (comp-equiv-sequential-diagram e e') =
+    naturality-map-hom-sequential-diagram C
+      ( comp-hom-sequential-diagram A B C
+        ( hom-equiv-sequential-diagram C e)
+        ( hom-equiv-sequential-diagram B e'))
+```
+
+## Properties
+
+### Characterization of equality of sequential diagrams
+
+```agda
+equiv-eq-sequential-diagram :
+  { l1 : Level} (A B : sequential-diagram l1) ‚Üí
+  A Ôºù B ‚Üí equiv-sequential-diagram A B
+equiv-eq-sequential-diagram A .A refl = id-equiv-sequential-diagram A
+
+abstract
+  is-torsorial-equiv-sequential-diagram :
+    { l1 : Level} (A : sequential-diagram l1) ‚Üí
+    is-contr (Œ£ (sequential-diagram l1) (equiv-sequential-diagram A))
+  is-torsorial-equiv-sequential-diagram A =
+    is-torsorial-Eq-structure _
+      ( is-torsorial-Eq-Œ†
+        ( Œª n ‚Üí family-sequential-diagram A n ‚âÉ_)
+        ( Œª n ‚Üí is-torsorial-equiv (family-sequential-diagram A n)))
+      ( family-sequential-diagram A , Œª n ‚Üí id-equiv)
+      ( is-torsorial-Eq-Œ†
+        ( Œª n ‚Üí _~ map-sequential-diagram A n)
+        ( Œª n ‚Üí is-torsorial-htpy' (map-sequential-diagram A n)))
+
+  is-equiv-equiv-eq-sequential-diagram :
+    { l1 : Level} (A B : sequential-diagram l1) ‚Üí
+    is-equiv (equiv-eq-sequential-diagram A B)
+  is-equiv-equiv-eq-sequential-diagram A =
+    fundamental-theorem-id
+      ( is-torsorial-equiv-sequential-diagram A)
+      ( equiv-eq-sequential-diagram A)
+
+extensionality-sequential-diagram :
+  { l1 : Level} (A B : sequential-diagram l1) ‚Üí
+  ( A Ôºù B) ‚âÉ equiv-sequential-diagram A B
+pr1 (extensionality-sequential-diagram A B) = equiv-eq-sequential-diagram A B
+pr2 (extensionality-sequential-diagram A B) =
+  is-equiv-equiv-eq-sequential-diagram A B
+
+eq-equiv-sequential-diagram :
+  { l1 : Level} (A B : sequential-diagram l1) ‚Üí
+  equiv-sequential-diagram A B ‚Üí (A Ôºù B)
+eq-equiv-sequential-diagram A B =
+  map-inv-equiv (extensionality-sequential-diagram A B)
+```
diff --git a/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
index cc4f195e4f..c70d122e18 100644
--- a/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
@@ -40,6 +40,16 @@ module _
   { l1 l2 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
   where
 
+  naturality-hom-sequential-diagram :
+    ( h :
+      ( n : ‚Ñï) ‚Üí
+      family-sequential-diagram A n ‚Üí family-sequential-diagram B n) ‚Üí
+    UU (l1 ‚äî l2)
+  naturality-hom-sequential-diagram h =
+    ( n : ‚Ñï) ‚Üí
+    ( map-sequential-diagram B n ‚àò h n) ~
+    ( h (succ-‚Ñï n) ‚àò map-sequential-diagram A n)
+
   hom-sequential-diagram : UU (l1 ‚äî l2)
   hom-sequential-diagram =
     section-dependent-sequential-diagram A
@@ -62,9 +72,7 @@ module _
       ( h)
 
   naturality-map-hom-sequential-diagram :
-    ( n : ‚Ñï) ‚Üí
-    ( map-sequential-diagram B n ‚àò map-hom-sequential-diagram n) ~
-    ( map-hom-sequential-diagram (succ-‚Ñï n) ‚àò map-sequential-diagram A n)
+    naturality-hom-sequential-diagram A B map-hom-sequential-diagram
   naturality-map-hom-sequential-diagram =
     naturality-map-section-dependent-sequential-diagram A
       ( constant-dependent-sequential-diagram A B)
@@ -202,16 +210,17 @@ module _
         ( is-torsorial-htpy-sequential-diagram f)
         ( htpy-eq-sequential-diagram f)
 
-  extensionality-sequential-diagram :
+  extensionality-hom-sequential-diagram :
     ( f f' : hom-sequential-diagram A B) ‚Üí
     ( f Ôºù f') ‚âÉ htpy-hom-sequential-diagram B f f'
-  pr1 (extensionality-sequential-diagram f f') = htpy-eq-sequential-diagram f f'
-  pr2 (extensionality-sequential-diagram f f') =
+  pr1 (extensionality-hom-sequential-diagram f f') =
+    htpy-eq-sequential-diagram f f'
+  pr2 (extensionality-hom-sequential-diagram f f') =
     is-equiv-htpy-eq-sequential-diagram f f'
 
   eq-htpy-sequential-diagram :
     ( f f' : hom-sequential-diagram A B) ‚Üí
     htpy-hom-sequential-diagram B f f' ‚Üí (f Ôºù f')
   eq-htpy-sequential-diagram f f' =
-    map-inv-equiv (extensionality-sequential-diagram f f')
+    map-inv-equiv (extensionality-hom-sequential-diagram f f')
 ```
diff --git a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
index 6199415394..59c3aba4ea 100644
--- a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
@@ -41,6 +41,12 @@ module _
   map-sequential-diagram = pr2 A
 ```
 
+## Properties
+
+The [identity type](foundation.identity-types.md) of sequential colimits is
+characterized in the file about
+[equivalences of sequential diagrams](synthetic-homotopy-theory.equivalences-sequential-diagrams.md).
+
 ## References
 
 1. Kristina Sojakova, Floris van Doorn, and Egbert Rijke. 2020. Sequential

From af0beb6e4b029aecc70f1b77cf76e1eb4108546f Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Tue, 17 Oct 2023 22:35:41 +0200
Subject: [PATCH 08/28] Naming, cleaning, progress on dependent cocones under
 cotowers

---
 src/synthetic-homotopy-theory.lagda.md        |   1 +
 ...cocones-under-sequential-diagrams.lagda.md |  66 +++--
 ...cocones-under-sequential-diagrams.lagda.md | 271 ++++++++++++++++++
 .../dependent-coforks.lagda.md                |  21 +-
 4 files changed, 316 insertions(+), 43 deletions(-)
 create mode 100644 src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index 498937137d..173d7dc740 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -22,6 +22,7 @@ open import synthetic-homotopy-theory.cofibers public
 open import synthetic-homotopy-theory.coforks public
 open import synthetic-homotopy-theory.conjugation-loops public
 open import synthetic-homotopy-theory.connected-set-bundles-circle public
+open import synthetic-homotopy-theory.dependent-cocones-under-sequential-diagrams public
 open import synthetic-homotopy-theory.dependent-cocones-under-spans public
 open import synthetic-homotopy-theory.dependent-coforks public
 open import synthetic-homotopy-theory.dependent-descent-circle public
diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index 5938f74d66..27d4cee45f 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -11,6 +11,7 @@ open import elementary-number-theory.natural-numbers
 
 open import foundation.action-on-identifications-functions
 open import foundation.binary-homotopies
+open import foundation.commuting-squares-of-homotopies
 open import foundation.commuting-squares-of-maps
 open import foundation.commuting-triangles-of-maps
 open import foundation.contractible-types
@@ -73,7 +74,7 @@ module _
           ( map-sequential-diagram A n))
 ```
 
-### Components of a cocone under a sequential diagram
+### Components of cocones under sequential diagrams
 
 ```agda
 module _
@@ -81,15 +82,14 @@ module _
   ( c : cocone-sequential-diagram A X)
   where
 
-  injection-cocone-sequential-diagram :
-    ( n : ‚Ñï) ‚Üí family-sequential-diagram A n ‚Üí X
-  injection-cocone-sequential-diagram = pr1 c
+  map-cocone-sequential-diagram : (n : ‚Ñï) ‚Üí family-sequential-diagram A n ‚Üí X
+  map-cocone-sequential-diagram = pr1 c
 
   coherence-triangle-cocone-sequential-diagram :
     ( n : ‚Ñï) ‚Üí
     coherence-triangle-maps
-      ( injection-cocone-sequential-diagram n)
-      ( injection-cocone-sequential-diagram (succ-‚Ñï n))
+      ( map-cocone-sequential-diagram n)
+      ( map-cocone-sequential-diagram (succ-‚Ñï n))
       ( map-sequential-diagram A n)
   coherence-triangle-cocone-sequential-diagram = pr2 c
 ```
@@ -101,25 +101,27 @@ module _
   { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
   where
 
-  statement-coherence-htpy-cocone-sequential-diagram :
+  coherence-htpy-cocone-sequential-diagram :
     ( c c' : cocone-sequential-diagram A X) ‚Üí
     ( (n : ‚Ñï) ‚Üí
-      injection-cocone-sequential-diagram A c n ~
-      injection-cocone-sequential-diagram A c' n) ‚Üí
+      map-cocone-sequential-diagram A c n ~
+      map-cocone-sequential-diagram A c' n) ‚Üí
     UU (l1 ‚äî l2)
-  statement-coherence-htpy-cocone-sequential-diagram c c' K =
+  coherence-htpy-cocone-sequential-diagram c c' K =
     ( n : ‚Ñï) ‚Üí
-      ( ( coherence-triangle-cocone-sequential-diagram A c n) ‚àôh
-        ( K (succ-‚Ñï n) ¬∑r map-sequential-diagram A n)) ~
-      ( K n ‚àôh coherence-triangle-cocone-sequential-diagram A c' n)
+      coherence-square-homotopies
+        ( coherence-triangle-cocone-sequential-diagram A c n)
+        ( K (succ-‚Ñï n) ¬∑r map-sequential-diagram A n)
+        ( K n)
+        ( coherence-triangle-cocone-sequential-diagram A c' n)
 
   htpy-cocone-sequential-diagram :
     ( c c' : cocone-sequential-diagram A X) ‚Üí UU (l1 ‚äî l2)
   htpy-cocone-sequential-diagram c c' =
     Œ£ ( ( n : ‚Ñï) ‚Üí
-        ( injection-cocone-sequential-diagram A c n) ~
-        ( injection-cocone-sequential-diagram A c' n))
-      ( statement-coherence-htpy-cocone-sequential-diagram c c')
+        ( map-cocone-sequential-diagram A c n) ~
+        ( map-cocone-sequential-diagram A c' n))
+      ( coherence-htpy-cocone-sequential-diagram c c')
 ```
 
 ### Components of a homotopy of cocones under a sequential diagram
@@ -133,17 +135,17 @@ module _
 
   htpy-htpy-cocone-sequential-diagram :
     ( n : ‚Ñï) ‚Üí
-    ( injection-cocone-sequential-diagram A c n) ~
-    ( injection-cocone-sequential-diagram A c' n)
+    ( map-cocone-sequential-diagram A c n) ~
+    ( map-cocone-sequential-diagram A c' n)
   htpy-htpy-cocone-sequential-diagram = pr1 H
 
-  coherence-htpy-cocone-sequential-diagram :
-    statement-coherence-htpy-cocone-sequential-diagram A c c'
+  coherence-htpy-htpy-cocone-sequential-diagram :
+    coherence-htpy-cocone-sequential-diagram A c c'
       ( htpy-htpy-cocone-sequential-diagram)
-  coherence-htpy-cocone-sequential-diagram = pr2 H
+  coherence-htpy-htpy-cocone-sequential-diagram = pr2 H
 ```
 
-### Postcomposing cocones under a sequential diagram
+### Postcomposing cocones under a sequential diagram with a map
 
 ```agda
 module _
@@ -155,7 +157,7 @@ module _
     { l : Level} {Y : UU l} ‚Üí
     ( X ‚Üí Y) ‚Üí cocone-sequential-diagram A Y
   pr1 (cocone-map-sequential-diagram f) n =
-    f ‚àò injection-cocone-sequential-diagram A c n
+    f ‚àò map-cocone-sequential-diagram A c n
   pr2 (cocone-map-sequential-diagram f) n =
     f ¬∑l (coherence-triangle-cocone-sequential-diagram A c n)
 ```
@@ -188,9 +190,9 @@ module _
             ( htpy-cocone-sequential-diagram A c))
     is-torsorial-htpy-cocone-sequential-diagram c =
       is-torsorial-Eq-structure
-        ( ev-pair (statement-coherence-htpy-cocone-sequential-diagram A c))
-        ( is-torsorial-binary-htpy (injection-cocone-sequential-diagram A c))
-        ( ( injection-cocone-sequential-diagram A c) ,
+        ( ev-pair (coherence-htpy-cocone-sequential-diagram A c))
+        ( is-torsorial-binary-htpy (map-cocone-sequential-diagram A c))
+        ( ( map-cocone-sequential-diagram A c) ,
           ( ev-pair refl-htpy))
         ( is-torsorial-binary-htpy
           ( Œª n ‚Üí
@@ -205,12 +207,20 @@ module _
         ( is-torsorial-htpy-cocone-sequential-diagram c)
         ( htpy-eq-cocone-sequential-diagram c)
 
+  extensionality-cocone-sequential-diagram :
+    ( c c' : cocone-sequential-diagram A X) ‚Üí
+    (c Ôºù c') ‚âÉ htpy-cocone-sequential-diagram A c c'
+  pr1 (extensionality-cocone-sequential-diagram c c') =
+    htpy-eq-cocone-sequential-diagram c c'
+  pr2 (extensionality-cocone-sequential-diagram c c') =
+    is-equiv-htpy-eq-cocone-sequential-diagram c c'
+
   eq-htpy-cocone-sequential-diagram :
     ( c c' : cocone-sequential-diagram A X) ‚Üí
     htpy-cocone-sequential-diagram A c c' ‚Üí
     c Ôºù c'
   eq-htpy-cocone-sequential-diagram c c' =
-    map-inv-is-equiv (is-equiv-htpy-eq-cocone-sequential-diagram c c')
+    map-inv-equiv (extensionality-cocone-sequential-diagram c c')
 ```
 
 ### Postcomposing a cocone under a sequential diagram by identity is the identity
@@ -285,7 +295,7 @@ module _
         ( top-map-cofork-cocone-sequential-diagram)
         ( X)
     pr1 (cofork-cocone-sequential-diagram c) =
-      ind-Œ£ (injection-cocone-sequential-diagram A c)
+      ind-Œ£ (map-cocone-sequential-diagram A c)
     pr2 (cofork-cocone-sequential-diagram c) =
       ind-Œ£ (coherence-triangle-cocone-sequential-diagram A c)
 
diff --git a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
new file mode 100644
index 0000000000..d98539523d
--- /dev/null
+++ b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
@@ -0,0 +1,271 @@
+# Dependent cocones under sequential diagrams
+
+```agda
+module synthetic-homotopy-theory.dependent-cocones-under-sequential-diagrams where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import elementary-number-theory.natural-numbers
+
+open import foundation.action-on-identifications-dependent-functions
+open import foundation.action-on-identifications-functions
+open import foundation.binary-homotopies
+open import foundation.commuting-triangles-of-maps
+open import foundation.constant-type-families
+open import foundation.contractible-types
+open import foundation.dependent-identifications
+open import foundation.dependent-pair-types
+open import foundation.equivalences
+open import foundation.equality-dependent-function-types
+open import foundation.function-types
+open import foundation.functoriality-dependent-function-types
+open import foundation.functoriality-dependent-pair-types
+open import foundation.fundamental-theorem-of-identity-types
+open import foundation.homotopies
+open import foundation.homotopy-induction
+open import foundation.identity-types
+open import foundation.structure-identity-principle
+open import foundation.transport-along-identifications
+open import foundation.universe-levels
+
+open import synthetic-homotopy-theory.cocones-under-sequential-diagrams
+open import synthetic-homotopy-theory.dependent-coforks
+open import synthetic-homotopy-theory.sequential-diagrams
+```
+
+</details>
+
+## Definitions
+
+### Dependent cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X) (P : X ‚Üí UU l3)
+  where
+
+  dependent-cocone-sequential-diagram : UU (l1 ‚äî l3)
+  dependent-cocone-sequential-diagram =
+    Œ£ ( ( n : ‚Ñï) (a : family-sequential-diagram A n) ‚Üí
+        P (map-cocone-sequential-diagram A c n a))
+      ( Œª i ‚Üí
+        ( n : ‚Ñï) ‚Üí (a : family-sequential-diagram A n) ‚Üí
+        dependent-identification P
+          ( coherence-triangle-cocone-sequential-diagram A c n a)
+          ( i n a)
+          ( i (succ-‚Ñï n) (map-sequential-diagram A n a)))
+```
+
+### Components of dependent cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  { c : cocone-sequential-diagram A X} (P : X ‚Üí UU l3)
+  ( d : dependent-cocone-sequential-diagram A c P)
+  where
+
+  map-dependent-cocone-sequential-diagram :
+    ( n : ‚Ñï) (a : family-sequential-diagram A n) ‚Üí
+    P (map-cocone-sequential-diagram A c n a)
+  map-dependent-cocone-sequential-diagram = pr1 d
+
+  coherence-triangle-dependent-cocone-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí (a : family-sequential-diagram A n) ‚Üí
+    dependent-identification P
+      ( coherence-triangle-cocone-sequential-diagram A c n a)
+      ( map-dependent-cocone-sequential-diagram n a)
+      ( map-dependent-cocone-sequential-diagram
+        ( succ-‚Ñï n)
+        ( map-sequential-diagram A n a))
+  coherence-triangle-dependent-cocone-sequential-diagram = pr2 d
+```
+
+### Homotopies of dependent cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  { c : cocone-sequential-diagram A X} (P : X ‚Üí UU l3)
+  where
+
+  coherence-htpy-dependent-cocone-sequential-diagram :
+    ( d d' : dependent-cocone-sequential-diagram A c P) ‚Üí
+    ( K :
+      ( n : ‚Ñï) ‚Üí
+      ( map-dependent-cocone-sequential-diagram A P d n) ~
+      ( map-dependent-cocone-sequential-diagram A P d' n)) ‚Üí
+    UU (l1 ‚äî l3)
+  coherence-htpy-dependent-cocone-sequential-diagram d d' K =
+    ( n : ‚Ñï) (a : family-sequential-diagram A n) ‚Üí
+    ( ( coherence-triangle-dependent-cocone-sequential-diagram A P d n a) ‚àô
+      ( K (succ-‚Ñï n) (map-sequential-diagram A n a))) Ôºù
+    ( ( ap
+        ( tr P (coherence-triangle-cocone-sequential-diagram A c n a))
+        ( K n a)) ‚àô
+      ( coherence-triangle-dependent-cocone-sequential-diagram A P d' n a))
+
+  htpy-dependent-cocone-sequential-diagram :
+    ( d d' : dependent-cocone-sequential-diagram A c P) ‚Üí
+    UU (l1 ‚äî l3)
+  htpy-dependent-cocone-sequential-diagram d d' =
+    Œ£ ( ( n : ‚Ñï) ‚Üí
+        ( map-dependent-cocone-sequential-diagram A P d n) ~
+        ( map-dependent-cocone-sequential-diagram A P d' n))
+      ( coherence-htpy-dependent-cocone-sequential-diagram d d')
+```
+
+### Components of homotopies of dependent cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  { c : cocone-sequential-diagram A X} (P : X ‚Üí UU l3)
+  ( d d' : dependent-cocone-sequential-diagram A c P)
+  ( H : htpy-dependent-cocone-sequential-diagram A P d d')
+  where
+
+  htpy-htpy-dependent-cocone-sequential-diagram :
+    ( n : ‚Ñï) ‚Üí
+    ( map-dependent-cocone-sequential-diagram A P d n) ~
+    ( map-dependent-cocone-sequential-diagram A P d' n)
+  htpy-htpy-dependent-cocone-sequential-diagram = pr1 H
+
+  coherence-htpy-htpy-dependent-cocone-sequential-diagram :
+    coherence-htpy-dependent-cocone-sequential-diagram A P d d'
+      ( htpy-htpy-dependent-cocone-sequential-diagram)
+  coherence-htpy-htpy-dependent-cocone-sequential-diagram = pr2 H
+```
+
+### Obtaining dependent cocones under sequential diagrams by postcomposing cocones under sequential diagrams with dependent maps
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  dependent-cocone-map-sequential-diagram :
+    { l : Level} (P : X ‚Üí UU l) ‚Üí
+    ( (x : X) ‚Üí P x) ‚Üí dependent-cocone-sequential-diagram A c P
+  pr1 (dependent-cocone-map-sequential-diagram P h) n =
+    h ‚àò map-cocone-sequential-diagram A c n
+  pr2 (dependent-cocone-map-sequential-diagram P h) n =
+    apd h ‚àò coherence-triangle-cocone-sequential-diagram A c n
+```
+
+## Properties
+
+### Characterization of identity types of cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  { c : cocone-sequential-diagram A X} (P : X ‚Üí UU l3)
+  where
+
+  reflexive-htpy-dependent-cocone-sequential-diagram :
+    ( d : dependent-cocone-sequential-diagram A c P) ‚Üí
+    htpy-dependent-cocone-sequential-diagram A P d d
+  pr1 (reflexive-htpy-dependent-cocone-sequential-diagram d) n = refl-htpy
+  pr2 (reflexive-htpy-dependent-cocone-sequential-diagram d) n = right-unit-htpy
+
+  htpy-eq-dependent-cocone-sequential-diagram :
+    ( d d' : dependent-cocone-sequential-diagram A c P) ‚Üí
+    ( d Ôºù d') ‚Üí htpy-dependent-cocone-sequential-diagram A P d d'
+  htpy-eq-dependent-cocone-sequential-diagram d .d refl =
+    reflexive-htpy-dependent-cocone-sequential-diagram d
+
+  abstract
+    is-torsorial-htpy-dependent-cocone-sequential-diagram :
+      ( d : dependent-cocone-sequential-diagram A c P) ‚Üí
+      is-contr
+        ( Œ£ ( dependent-cocone-sequential-diagram A c P)
+            ( htpy-dependent-cocone-sequential-diagram A P d))
+    is-torsorial-htpy-dependent-cocone-sequential-diagram d =
+      is-torsorial-Eq-structure
+        ( ev-pair (coherence-htpy-dependent-cocone-sequential-diagram A P d))
+        ( is-torsorial-binary-htpy
+          ( map-dependent-cocone-sequential-diagram A P d))
+        ( map-dependent-cocone-sequential-diagram A P d ,
+          ev-pair refl-htpy)
+        ( is-torsorial-binary-htpy
+          ( Œª n ‚Üí
+            ( coherence-triangle-dependent-cocone-sequential-diagram A P d n) ‚àôh
+            ( refl-htpy)))
+
+    is-equiv-htpy-eq-dependent-cocone-sequential-diagram :
+      ( d d' : dependent-cocone-sequential-diagram A c P) ‚Üí
+      is-equiv (htpy-eq-dependent-cocone-sequential-diagram d d')
+    is-equiv-htpy-eq-dependent-cocone-sequential-diagram d =
+      fundamental-theorem-id
+        ( is-torsorial-htpy-dependent-cocone-sequential-diagram d)
+        ( htpy-eq-dependent-cocone-sequential-diagram d)
+
+  extensionality-dependent-cocone-sequential-diagram :
+    ( d d' : dependent-cocone-sequential-diagram A c P) ‚Üí
+    ( d Ôºù d') ‚âÉ htpy-dependent-cocone-sequential-diagram A P d d'
+  pr1 (extensionality-dependent-cocone-sequential-diagram d d') =
+    htpy-eq-dependent-cocone-sequential-diagram d d'
+  pr2 (extensionality-dependent-cocone-sequential-diagram d d') =
+    is-equiv-htpy-eq-dependent-cocone-sequential-diagram d d'
+
+  eq-htpy-dependent-cocone-sequential-diagram :
+    ( d d' : dependent-cocone-sequential-diagram A c P) ‚Üí
+    htpy-dependent-cocone-sequential-diagram A P d d' ‚Üí (d Ôºù d')
+  eq-htpy-dependent-cocone-sequential-diagram d d' =
+    map-inv-equiv (extensionality-dependent-cocone-sequential-diagram d d')
+```
+
+### Dependent cocones under sequential diagrams on fiberwise constant type families are equivalent to regular cocones under sequential diagrams
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X) (Y : UU l3)
+  where
+
+  compute-dependent-cocone-constant-family-sequential-diagram :
+    ( dependent-cocone-sequential-diagram A c (Œª _ ‚Üí Y)) ‚âÉ
+    ( cocone-sequential-diagram A Y)
+  compute-dependent-cocone-constant-family-sequential-diagram =
+    equiv-tot
+      ( Œª i ‚Üí
+        equiv-Œ†-equiv-family
+          ( Œª n ‚Üí
+            equiv-Œ†-equiv-family
+              ( Œª a ‚Üí
+                equiv-concat
+                  ( inv
+                    ( tr-constant-type-family
+                      ( coherence-triangle-cocone-sequential-diagram A c n a)
+                      ( i n a)))
+                  ( i (succ-‚Ñï n) (map-sequential-diagram A n a)))))
+
+  map-compute-dependent-cocone-constant-family-sequential-diagram :
+    dependent-cocone-sequential-diagram A c (Œª _ ‚Üí Y) ‚Üí
+    cocone-sequential-diagram A Y
+  map-compute-dependent-cocone-constant-family-sequential-diagram =
+    map-equiv compute-dependent-cocone-constant-family-sequential-diagram
+
+  triangle-compute-dependent-cocone-constant-family-sequential-diagram :
+    coherence-triangle-maps
+      ( cocone-map-sequential-diagram A c)
+      ( map-compute-dependent-cocone-constant-family-sequential-diagram)
+      ( dependent-cocone-map-sequential-diagram A c (Œª _ ‚Üí Y))
+  triangle-compute-dependent-cocone-constant-family-sequential-diagram h =
+    eq-htpy-cocone-sequential-diagram A
+      ( cocone-map-sequential-diagram A c h)
+      ( map-compute-dependent-cocone-constant-family-sequential-diagram
+        ( dependent-cocone-map-sequential-diagram A c (Œª _ ‚Üí Y) h))
+      ( ( ev-pair refl-htpy) ,
+        ( Œª n a ‚Üí
+          right-unit ‚àô
+          left-transpose-eq-concat _ _ _
+            ( inv
+              ( apd-constant-type-family h
+                ( coherence-triangle-cocone-sequential-diagram A c n a)))))
+```
diff --git a/src/synthetic-homotopy-theory/dependent-coforks.lagda.md b/src/synthetic-homotopy-theory/dependent-coforks.lagda.md
index 6377941447..1a92323c63 100644
--- a/src/synthetic-homotopy-theory/dependent-coforks.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-coforks.lagda.md
@@ -76,10 +76,10 @@ module _
     Œ£ ( (b : B) ‚Üí P (map-cofork f g e b))
       ( Œª k ‚Üí
         ( a : A) ‚Üí
-          dependent-identification P
-            ( coherence-cofork f g e a)
-            ( k (f a))
-            ( k (g a)))
+        dependent-identification P
+          ( coherence-cofork f g e a)
+          ( k (f a))
+          ( k (g a)))
 
 module _
   { l1 l2 l3 l4 : Level} {A : UU l1} {B : UU l2} (f g : A ‚Üí B) {X : UU l3}
@@ -182,17 +182,8 @@ module _
         ( ev-pair (coherence-htpy-dependent-cofork f g P k))
         ( is-torsorial-htpy (map-dependent-cofork f g P k))
         ( map-dependent-cofork f g P k , refl-htpy)
-        ( is-contr-is-equiv'
-          ( Œ£ ( (a : A) ‚Üí
-                dependent-identification P
-                  ( coherence-cofork f g e a)
-                  ( map-dependent-cofork f g P k (f a))
-                  ( map-dependent-cofork f g P k (g a)))
-              ( Œª K ‚Üí coherence-dependent-cofork f g P k ~ K))
-          ( tot (Œª K M ‚Üí right-unit-htpy ‚àôh M))
-          ( is-equiv-tot-is-fiberwise-equiv
-            ( is-equiv-concat-htpy right-unit-htpy))
-          ( is-torsorial-htpy (coherence-dependent-cofork f g P k)))
+        ( is-torsorial-htpy
+          ( coherence-dependent-cofork f g P k ‚àôh refl-htpy))
 
     is-equiv-htpy-dependent-cofork-eq :
       ( k k' : dependent-cofork f g e P) ‚Üí

From 594d629b745bdd04b004ba007397ac607dab8165 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Thu, 19 Oct 2023 16:14:54 +0200
Subject: [PATCH 09/28] Dependent cocones under cotowers are dependent coforks

---
 ...cocones-under-sequential-diagrams.lagda.md | 115 +++++++++++++++++-
 1 file changed, 114 insertions(+), 1 deletion(-)

diff --git a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
index d98539523d..001021bf6b 100644
--- a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
@@ -17,8 +17,8 @@ open import foundation.constant-type-families
 open import foundation.contractible-types
 open import foundation.dependent-identifications
 open import foundation.dependent-pair-types
-open import foundation.equivalences
 open import foundation.equality-dependent-function-types
+open import foundation.equivalences
 open import foundation.function-types
 open import foundation.functoriality-dependent-function-types
 open import foundation.functoriality-dependent-pair-types
@@ -269,3 +269,116 @@ module _
               ( apd-constant-type-family h
                 ( coherence-triangle-cocone-sequential-diagram A c n a)))))
 ```
+
+### Dependent cocones under sequential diagram are special cases of dependent coforks
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  module _
+    { l3 : Level} (P : X ‚Üí UU l3)
+    where
+
+    dependent-cofork-dependent-cocone-sequential-diagram :
+      dependent-cocone-sequential-diagram A c P ‚Üí
+      dependent-cofork
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c)
+        ( P)
+    pr1 (dependent-cofork-dependent-cocone-sequential-diagram d) =
+      ind-Œ£ (map-dependent-cocone-sequential-diagram A P d)
+    pr2 (dependent-cofork-dependent-cocone-sequential-diagram d) =
+      ind-Œ£ (coherence-triangle-dependent-cocone-sequential-diagram A P d)
+
+    dependent-cocone-dependent-cofork-sequential-diagram :
+      dependent-cofork
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c)
+        ( P) ‚Üí
+      dependent-cocone-sequential-diagram A c P
+    pr1 (dependent-cocone-dependent-cofork-sequential-diagram e) =
+      ev-pair
+        ( map-dependent-cofork
+          ( bottom-map-cofork-cocone-sequential-diagram A)
+          ( top-map-cofork-cocone-sequential-diagram A)
+          ( P)
+          ( e))
+    pr2 (dependent-cocone-dependent-cofork-sequential-diagram e) =
+      ev-pair
+        ( coherence-dependent-cofork
+          ( bottom-map-cofork-cocone-sequential-diagram A)
+          ( top-map-cofork-cocone-sequential-diagram A)
+          ( P)
+          ( e))
+
+    abstract
+      is-section-dependent-cofork-dependent-cocone-sequential-diagram :
+        ( dependent-cocone-dependent-cofork-sequential-diagram ‚àò
+          dependent-cofork-dependent-cocone-sequential-diagram) ~
+        ( id)
+      is-section-dependent-cofork-dependent-cocone-sequential-diagram d =
+        eq-htpy-dependent-cocone-sequential-diagram A P
+          ( dependent-cocone-dependent-cofork-sequential-diagram
+            ( dependent-cofork-dependent-cocone-sequential-diagram d))
+          ( d)
+          ( ev-pair refl-htpy , ev-pair right-unit-htpy)
+
+      is-retraction-dependent-cofork-dependent-cocone-sequential-diagram :
+        ( dependent-cofork-dependent-cocone-sequential-diagram ‚àò
+          dependent-cocone-dependent-cofork-sequential-diagram) ~
+        ( id)
+      is-retraction-dependent-cofork-dependent-cocone-sequential-diagram e =
+        eq-htpy-dependent-cofork
+          ( bottom-map-cofork-cocone-sequential-diagram A)
+          ( top-map-cofork-cocone-sequential-diagram A)
+          ( P)
+          ( dependent-cofork-dependent-cocone-sequential-diagram
+            ( dependent-cocone-dependent-cofork-sequential-diagram e))
+          ( e)
+          ( refl-htpy , right-unit-htpy)
+
+    is-equiv-dependent-cofork-dependent-cocone-sequential-diagram :
+      is-equiv dependent-cofork-dependent-cocone-sequential-diagram
+    is-equiv-dependent-cofork-dependent-cocone-sequential-diagram =
+      is-equiv-is-invertible
+        ( dependent-cocone-dependent-cofork-sequential-diagram)
+        ( is-retraction-dependent-cofork-dependent-cocone-sequential-diagram)
+        ( is-section-dependent-cofork-dependent-cocone-sequential-diagram)
+
+    equiv-dependent-cofork-dependent-cocone-sequential-diagram :
+      dependent-cocone-sequential-diagram A c P ‚âÉ
+      dependent-cofork
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c)
+        ( P)
+    pr1 equiv-dependent-cofork-dependent-cocone-sequential-diagram =
+      dependent-cofork-dependent-cocone-sequential-diagram
+    pr2 equiv-dependent-cofork-dependent-cocone-sequential-diagram =
+      is-equiv-dependent-cofork-dependent-cocone-sequential-diagram
+
+  triangle-dependent-cocone-dependent-cofork-sequential-diagram :
+    { l3 : Level} (P : X ‚Üí UU l3) ‚Üí
+    coherence-triangle-maps
+      ( dependent-cocone-map-sequential-diagram A c P)
+      ( dependent-cocone-dependent-cofork-sequential-diagram P)
+      ( dependent-cofork-map
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c))
+  triangle-dependent-cocone-dependent-cofork-sequential-diagram P h =
+    eq-htpy-dependent-cocone-sequential-diagram A P
+      ( dependent-cocone-map-sequential-diagram A c P h)
+      ( dependent-cocone-dependent-cofork-sequential-diagram P
+        ( dependent-cofork-map
+          ( bottom-map-cofork-cocone-sequential-diagram A)
+          ( top-map-cofork-cocone-sequential-diagram A)
+          ( cofork-cocone-sequential-diagram A c)
+          ( h)))
+      ( ev-pair refl-htpy , ev-pair right-unit-htpy)
+```

From f6c7a99b8cc59133c269f11485d528bf795da01a Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Thu, 19 Oct 2023 23:06:37 +0200
Subject: [PATCH 10/28] Universal property of sequential colimits

---
 src/synthetic-homotopy-theory.lagda.md        |   1 +
 ...cocones-under-sequential-diagrams.lagda.md |  72 ++---
 ...rsal-property-sequential-colimits.lagda.md | 296 ++++++++++++++++++
 3 files changed, 333 insertions(+), 36 deletions(-)
 create mode 100644 src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index 173d7dc740..30a444c363 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -84,6 +84,7 @@ open import synthetic-homotopy-theory.universal-cover-circle public
 open import synthetic-homotopy-theory.universal-property-circle public
 open import synthetic-homotopy-theory.universal-property-coequalizers public
 open import synthetic-homotopy-theory.universal-property-pushouts public
+open import synthetic-homotopy-theory.universal-property-sequential-colimits public
 open import synthetic-homotopy-theory.universal-property-suspensions public
 open import synthetic-homotopy-theory.universal-property-suspensions-of-pointed-types public
 open import synthetic-homotopy-theory.wedges-of-pointed-types public
diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index 27d4cee45f..d9933f2ca2 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -288,17 +288,6 @@ module _
     { l2 : Level} {X : UU l2}
     where
 
-    cofork-cocone-sequential-diagram :
-      cocone-sequential-diagram A X ‚Üí
-      cofork
-        ( bottom-map-cofork-cocone-sequential-diagram)
-        ( top-map-cofork-cocone-sequential-diagram)
-        ( X)
-    pr1 (cofork-cocone-sequential-diagram c) =
-      ind-Œ£ (map-cocone-sequential-diagram A c)
-    pr2 (cofork-cocone-sequential-diagram c) =
-      ind-Œ£ (coherence-triangle-cocone-sequential-diagram A c)
-
     cocone-sequential-diagram-cofork :
       cofork
         ( bottom-map-cofork-cocone-sequential-diagram)
@@ -318,20 +307,21 @@ module _
           ( top-map-cofork-cocone-sequential-diagram)
           ( e))
 
-    abstract
-      is-section-cofork-cocone-sequential-diagram :
-        cocone-sequential-diagram-cofork ‚àò cofork-cocone-sequential-diagram ~ id
-      is-section-cofork-cocone-sequential-diagram c =
-        eq-htpy-cocone-sequential-diagram A
-          ( cocone-sequential-diagram-cofork
-            ( cofork-cocone-sequential-diagram c))
-          ( c)
-          ( ev-pair refl-htpy ,
-            ev-pair right-unit-htpy)
+    cofork-cocone-sequential-diagram :
+      cocone-sequential-diagram A X ‚Üí
+      cofork
+        ( bottom-map-cofork-cocone-sequential-diagram)
+        ( top-map-cofork-cocone-sequential-diagram)
+        ( X)
+    pr1 (cofork-cocone-sequential-diagram c) =
+      ind-Œ£ (map-cocone-sequential-diagram A c)
+    pr2 (cofork-cocone-sequential-diagram c) =
+      ind-Œ£ (coherence-triangle-cocone-sequential-diagram A c)
 
-      is-retraction-cofork-cocone-sequential-diagram :
+    abstract
+      is-section-cocone-sequential-diagram-cofork :
         cofork-cocone-sequential-diagram ‚àò cocone-sequential-diagram-cofork ~ id
-      is-retraction-cofork-cocone-sequential-diagram e =
+      is-section-cocone-sequential-diagram-cofork e =
         eq-htpy-cofork
           ( bottom-map-cofork-cocone-sequential-diagram)
           ( top-map-cofork-cocone-sequential-diagram)
@@ -340,24 +330,34 @@ module _
           ( e)
           ( refl-htpy , right-unit-htpy)
 
-    is-equiv-cofork-cocone-sequential-diagram :
-      is-equiv cofork-cocone-sequential-diagram
-    is-equiv-cofork-cocone-sequential-diagram =
+      is-retraction-cocone-sequential-diagram-cofork :
+        cocone-sequential-diagram-cofork ‚àò cofork-cocone-sequential-diagram ~ id
+      is-retraction-cocone-sequential-diagram-cofork c =
+        eq-htpy-cocone-sequential-diagram A
+          ( cocone-sequential-diagram-cofork
+            ( cofork-cocone-sequential-diagram c))
+          ( c)
+          ( ev-pair refl-htpy ,
+            ev-pair right-unit-htpy)
+
+    is-equiv-cocone-sequential-diagram-cofork :
+      is-equiv cocone-sequential-diagram-cofork
+    is-equiv-cocone-sequential-diagram-cofork =
       is-equiv-is-invertible
-        ( cocone-sequential-diagram-cofork)
-        ( is-retraction-cofork-cocone-sequential-diagram)
-        ( is-section-cofork-cocone-sequential-diagram)
+        ( cofork-cocone-sequential-diagram)
+        ( is-retraction-cocone-sequential-diagram-cofork)
+        ( is-section-cocone-sequential-diagram-cofork)
 
-    equiv-cofork-cocone-sequential-diagram :
-      cocone-sequential-diagram A X ‚âÉ
+    equiv-cocone-sequential-diagram-cofork :
       cofork
         ( bottom-map-cofork-cocone-sequential-diagram)
         ( top-map-cofork-cocone-sequential-diagram)
-        ( X)
-    pr1 equiv-cofork-cocone-sequential-diagram =
-      cofork-cocone-sequential-diagram
-    pr2 equiv-cofork-cocone-sequential-diagram =
-      is-equiv-cofork-cocone-sequential-diagram
+        ( X) ‚âÉ
+      cocone-sequential-diagram A X
+    pr1 equiv-cocone-sequential-diagram-cofork =
+      cocone-sequential-diagram-cofork
+    pr2 equiv-cocone-sequential-diagram-cofork =
+      is-equiv-cocone-sequential-diagram-cofork
 
   triangle-cocone-sequential-diagram-cofork :
     { l2 l3 : Level} {X : UU l2} {Y : UU l3} ‚Üí
diff --git a/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
new file mode 100644
index 0000000000..8c2044d2ff
--- /dev/null
+++ b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
@@ -0,0 +1,296 @@
+# The universal property of sequential colimits
+
+```agda
+module synthetic-homotopy-theory.universal-property-sequential-colimits where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import foundation.action-on-identifications-functions
+open import foundation.commuting-triangles-of-maps
+open import foundation.contractible-maps
+open import foundation.contractible-types
+open import foundation.dependent-pair-types
+open import foundation.equivalences
+open import foundation.fibers-of-maps
+open import foundation.function-types
+open import foundation.functoriality-dependent-pair-types
+open import foundation.functoriality-function-types
+open import foundation.homotopies
+open import foundation.identity-types
+open import foundation.propositions
+open import foundation.subtype-identity-principle
+open import foundation.universe-levels
+
+open import synthetic-homotopy-theory.cocones-under-sequential-diagrams
+open import synthetic-homotopy-theory.coforks
+open import synthetic-homotopy-theory.sequential-diagrams
+open import synthetic-homotopy-theory.universal-property-coequalizers
+```
+
+</details>
+
+## Definitions
+
+### The universal property of sequential colimits
+
+```agda
+module _
+  { l1 l2 : Level} (l : Level) (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  universal-property-sequential-colimit : UU (l1 ‚äî l2 ‚äî lsuc l)
+  universal-property-sequential-colimit =
+    ( Y : UU l) ‚Üí is-equiv (cocone-map-sequential-diagram A c {Y = Y})
+```
+
+### The map induced by the universal property of sequential colimits
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X) {Y : UU l3}
+  ( up-sequential-colimit : universal-property-sequential-colimit l3 A c)
+  where
+
+  map-universal-property-sequential-colimit :
+    cocone-sequential-diagram A Y ‚Üí (X ‚Üí Y)
+  map-universal-property-sequential-colimit =
+    map-inv-is-equiv (up-sequential-colimit Y)
+```
+
+## Properties
+
+### The mediating map obtained by the universal property is unique
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X) {Y : UU l3}
+  ( up-sequential-colimit : universal-property-sequential-colimit l3 A c)
+  ( c' : cocone-sequential-diagram A Y)
+  where
+
+  htpy-cocone-universal-property-sequential-colimit :
+    htpy-cocone-sequential-diagram A
+      ( cocone-map-sequential-diagram A c
+        ( map-universal-property-sequential-colimit A c
+          ( up-sequential-colimit)
+          ( c')))
+      ( c')
+  htpy-cocone-universal-property-sequential-colimit =
+    htpy-eq-cocone-sequential-diagram A
+      ( cocone-map-sequential-diagram A c
+        ( map-universal-property-sequential-colimit A c
+          ( up-sequential-colimit)
+          ( c')))
+      ( c')
+      ( is-section-map-inv-is-equiv (up-sequential-colimit Y) c')
+
+  abstract
+    uniqueness-map-universal-property-sequential-colimit :
+      is-contr
+        ( Œ£ (X ‚Üí Y)
+            ( Œª h ‚Üí
+              htpy-cocone-sequential-diagram A
+                ( cocone-map-sequential-diagram A c h)
+                ( c')))
+    uniqueness-map-universal-property-sequential-colimit =
+      is-contr-equiv'
+        ( fiber (cocone-map-sequential-diagram A c) c')
+        ( equiv-tot
+          ( Œª h ‚Üí
+            extensionality-cocone-sequential-diagram A
+              ( cocone-map-sequential-diagram A c h)
+              ( c')))
+        ( is-contr-map-is-equiv (up-sequential-colimit Y) c')
+```
+
+### A cocone under a sequential diagram has the universal property of sequential colimits if and only if the corresponding cofork has the universal property of coequalizers
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  universal-property-cocone-sequential-colimit-universal-property-coequalizer :
+    ( {l : Level} ‚Üí
+      universal-property-coequalizer l
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c)) ‚Üí
+    ( {l : Level} ‚Üí
+      universal-property-sequential-colimit l A c)
+  universal-property-cocone-sequential-colimit-universal-property-coequalizer
+    ( up-cofork)
+    ( Y) =
+    is-equiv-comp-htpy
+      ( cocone-map-sequential-diagram A c)
+      ( cocone-sequential-diagram-cofork A)
+      ( cofork-map
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c))
+      ( triangle-cocone-sequential-diagram-cofork A c)
+      ( up-cofork Y)
+      ( is-equiv-cocone-sequential-diagram-cofork A)
+
+  universal-property-coequalizer-universal-property-cocone-sequential-colimit :
+    ( {l : Level} ‚Üí
+      universal-property-sequential-colimit l A c) ‚Üí
+    ( {l : Level} ‚Üí
+      universal-property-coequalizer l
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c))
+  universal-property-coequalizer-universal-property-cocone-sequential-colimit
+    ( up-sequential-colimit)
+    ( Y) =
+    is-equiv-right-factor-htpy
+      ( cocone-map-sequential-diagram A c)
+      ( cocone-sequential-diagram-cofork A)
+      ( cofork-map
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c))
+      ( triangle-cocone-sequential-diagram-cofork A c)
+      ( is-equiv-cocone-sequential-diagram-cofork A)
+      ( up-sequential-colimit Y)
+```
+
+### 3-for-2 property of sequential colimits
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2} {Y : UU l3}
+  ( c : cocone-sequential-diagram A X)
+  ( c' : cocone-sequential-diagram A Y)
+  ( h : X ‚Üí Y)
+  ( H :
+    htpy-cocone-sequential-diagram A (cocone-map-sequential-diagram A c h) c')
+  where
+
+  inv-triangle-cocone-map-precomp-sequential-diagram :
+    { l4 : Level} (Z : UU l4) ‚Üí
+    coherence-triangle-maps'
+      ( cocone-map-sequential-diagram A c')
+      ( cocone-map-sequential-diagram A c)
+      ( precomp h Z)
+  inv-triangle-cocone-map-precomp-sequential-diagram Z k =
+    ( cocone-map-comp-sequential-diagram A c h k) ‚àô
+    ( ap
+      ( Œª d ‚Üí cocone-map-sequential-diagram A d k)
+      ( eq-htpy-cocone-sequential-diagram A
+        ( cocone-map-sequential-diagram A c h)
+        ( c')
+        ( H)))
+
+  triangle-cocone-map-precomp-sequential-diagram :
+    { l4 : Level} (Z : UU l4) ‚Üí
+    coherence-triangle-maps
+      ( cocone-map-sequential-diagram A c')
+      ( cocone-map-sequential-diagram A c)
+      ( precomp h Z)
+  triangle-cocone-map-precomp-sequential-diagram Z =
+    inv-htpy (inv-triangle-cocone-map-precomp-sequential-diagram Z)
+
+  abstract
+    is-equiv-universal-property-sequential-colimit-universal-property-sequential-colimit :
+      ( {l : Level} ‚Üí universal-property-sequential-colimit l A c) ‚Üí
+      ( {l : Level} ‚Üí universal-property-sequential-colimit l A c') ‚Üí
+      is-equiv h
+    is-equiv-universal-property-sequential-colimit-universal-property-sequential-colimit
+      ( up-sequential-colimit)
+      ( up-sequential-colimit') =
+      is-equiv-is-equiv-precomp h
+        ( Œª l Z ‚Üí
+          is-equiv-right-factor-htpy
+            ( cocone-map-sequential-diagram A c')
+            ( cocone-map-sequential-diagram A c)
+            ( precomp h Z)
+            ( triangle-cocone-map-precomp-sequential-diagram Z)
+            ( up-sequential-colimit Z)
+            ( up-sequential-colimit' Z))
+
+    universal-property-sequential-colimit-is-equiv-universal-property-sequential-colomit :
+      ( {l : Level} ‚Üí universal-property-sequential-colimit l A c) ‚Üí
+      is-equiv h ‚Üí
+      ( {l : Level} ‚Üí universal-property-sequential-colimit l A c')
+    universal-property-sequential-colimit-is-equiv-universal-property-sequential-colomit
+      ( up-sequential-colimit)
+      ( is-equiv-h)
+      ( Z) =
+      is-equiv-comp-htpy
+        ( cocone-map-sequential-diagram A c')
+        ( cocone-map-sequential-diagram A c)
+        ( precomp h Z)
+        ( triangle-cocone-map-precomp-sequential-diagram Z)
+        ( is-equiv-precomp-is-equiv h is-equiv-h Z)
+        ( up-sequential-colimit Z)
+
+    universal-property-sequential-colimit-universal-property-sequential-colimit-is-equiv :
+      is-equiv h ‚Üí
+      ( {l : Level} ‚Üí universal-property-sequential-colimit l A c') ‚Üí
+      ( {l : Level} ‚Üí universal-property-sequential-colimit l A c)
+    universal-property-sequential-colimit-universal-property-sequential-colimit-is-equiv
+      ( is-equiv-h)
+      ( up-sequential-colimit)
+      ( Z) =
+      is-equiv-left-factor-htpy
+        ( cocone-map-sequential-diagram A c')
+        ( cocone-map-sequential-diagram A c)
+        ( precomp h Z)
+        ( triangle-cocone-map-precomp-sequential-diagram Z)
+        ( up-sequential-colimit Z)
+        ( is-equiv-precomp-is-equiv h is-equiv-h Z)
+```
+
+### Unique uniqueness of of sequential colimits
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2} {Y : UU l3}
+  ( c : cocone-sequential-diagram A X)
+  ( c' : cocone-sequential-diagram A Y)
+  ( up-sequential-diagram :
+    {l : Level} ‚Üí universal-property-sequential-colimit l A c)
+  ( up-sequential-diagram' :
+    {l : Level} ‚Üí universal-property-sequential-colimit l A c')
+  where
+
+  abstract
+    uniquely-unique-sequential-colimit :
+      is-contr
+        ( Œ£ ( X ‚âÉ Y)
+            ( Œª e ‚Üí
+              htpy-cocone-sequential-diagram A
+                ( cocone-map-sequential-diagram A c (map-equiv e))
+                ( c')))
+    uniquely-unique-sequential-colimit =
+      is-torsorial-Eq-subtype
+        ( uniqueness-map-universal-property-sequential-colimit A c
+          ( up-sequential-diagram)
+          ( c'))
+        ( is-property-is-equiv)
+        ( map-universal-property-sequential-colimit A c
+          ( up-sequential-diagram)
+          ( c'))
+        ( htpy-cocone-universal-property-sequential-colimit A c
+          ( up-sequential-diagram)
+          ( c'))
+        ( is-equiv-universal-property-sequential-colimit-universal-property-sequential-colimit
+          ( A)
+          ( c)
+          ( c')
+          ( map-universal-property-sequential-colimit A c
+            ( up-sequential-diagram)
+            ( c'))
+          ( htpy-cocone-universal-property-sequential-colimit A c
+            ( up-sequential-diagram)
+            ( c'))
+          ( up-sequential-diagram)
+          ( up-sequential-diagram'))
+```

From 87759abe55fc7ecc193670ec1dd5db18d6a41efc Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Thu, 19 Oct 2023 23:12:27 +0200
Subject: [PATCH 11/28] Remove 27-sequences

That formalization is superseded by the current work on sequential
colimits
---
 src/synthetic-homotopy-theory.lagda.md        |   1 -
 .../27-sequences.lagda.md                     | 202 ------------------
 2 files changed, 203 deletions(-)
 delete mode 100644 src/synthetic-homotopy-theory/27-sequences.lagda.md

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index 30a444c363..1783ff1015 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -7,7 +7,6 @@ module synthetic-homotopy-theory where
 
 open import synthetic-homotopy-theory.26-descent public
 open import synthetic-homotopy-theory.26-id-pushout public
-open import synthetic-homotopy-theory.27-sequences public
 open import synthetic-homotopy-theory.acyclic-maps public
 open import synthetic-homotopy-theory.acyclic-types public
 open import synthetic-homotopy-theory.category-of-connected-set-bundles-circle public
diff --git a/src/synthetic-homotopy-theory/27-sequences.lagda.md b/src/synthetic-homotopy-theory/27-sequences.lagda.md
deleted file mode 100644
index 09f60cf2ca..0000000000
--- a/src/synthetic-homotopy-theory/27-sequences.lagda.md
+++ /dev/null
@@ -1,202 +0,0 @@
-# Formalization of the Symmetry book - 27 sequences
-
-```agda
-module synthetic-homotopy-theory.27-sequences where
-```
-
-<details><summary>Imports</summary>
-
-```agda
-open import elementary-number-theory.natural-numbers
-
-open import foundation.contractible-types
-open import foundation.dependent-pair-types
-open import foundation.equality-dependent-function-types
-open import foundation.equivalences
-open import foundation.function-types
-open import foundation.fundamental-theorem-of-identity-types
-open import foundation.homotopies
-open import foundation.homotopy-induction
-open import foundation.identity-types
-open import foundation.structure-identity-principle
-open import foundation.torsorial-type-families
-open import foundation.univalence
-open import foundation.universe-levels
-open import foundation.whiskering-homotopies
-```
-
-</details>
-
-We introduce two types of sequences: one with the arrows going up and one with
-the arrows going down.
-
-```agda
-Sequence :
-  ( l : Level) ‚Üí UU (lsuc l)
-Sequence l = Œ£ (‚Ñï ‚Üí UU l) (Œª A ‚Üí (n : ‚Ñï) ‚Üí A n ‚Üí A (succ-‚Ñï n))
-
-type-seq :
-  { l : Level} (A : Sequence l) ‚Üí (n : ‚Ñï) ‚Üí UU l
-type-seq A = pr1 A
-
-map-seq :
-  { l : Level} (A : Sequence l) ‚Üí
-  ( n : ‚Ñï) ‚Üí (type-seq A n) ‚Üí (type-seq A (succ-‚Ñï n))
-map-seq A = pr2 A
-```
-
-### Characterizing the identity type of `Sequence`
-
-```agda
-naturality-hom-Seq :
-  { l1 l2 : Level} (A : Sequence l1) (B : Sequence l2)
-  ( h : (n : ‚Ñï) ‚Üí type-seq A n ‚Üí type-seq B n) (n : ‚Ñï) ‚Üí UU (l1 ‚äî l2)
-naturality-hom-Seq A B h n =
-  ((map-seq B n) ‚àò (h n)) ~ ((h (succ-‚Ñï n)) ‚àò (map-seq A n))
-
-equiv-Seq :
-  { l1 l2 : Level} (A : Sequence l1) (B : Sequence l2) ‚Üí UU (l1 ‚äî l2)
-equiv-Seq A B =
-  Œ£ ( (n : ‚Ñï) ‚Üí (type-seq A n) ‚âÉ (type-seq B n))
-    ( Œª e ‚Üí (n : ‚Ñï) ‚Üí
-      naturality-hom-Seq A B (Œª n ‚Üí map-equiv (e n)) n)
-
-id-equiv-Seq :
-  { l1 : Level} (A : Sequence l1) ‚Üí equiv-Seq A A
-id-equiv-Seq A =
-  pair
-    ( Œª n ‚Üí id-equiv)
-    ( Œª n ‚Üí refl-htpy)
-
-equiv-eq-Seq :
-  { l1 : Level} (A B : Sequence l1) ‚Üí Id A B ‚Üí equiv-Seq A B
-equiv-eq-Seq A .A refl = id-equiv-Seq A
-
-is-torsorial-equiv-Seq :
-  { l1 : Level} (A : Sequence l1) ‚Üí is-torsorial (equiv-Seq A)
-is-torsorial-equiv-Seq A =
-  is-torsorial-Eq-structure
-    ( Œª B g (e : (n : ‚Ñï) ‚Üí (type-seq A n) ‚âÉ B n) ‚Üí
-      (n : ‚Ñï) ‚Üí naturality-hom-Seq A (pair B g) (Œª n ‚Üí map-equiv (e n)) n)
-    ( is-torsorial-Eq-Œ†
-      ( Œª n X ‚Üí type-seq A n ‚âÉ X)
-      ( Œª n ‚Üí is-torsorial-equiv (type-seq A n)))
-    ( pair (type-seq A) (Œª n ‚Üí id-equiv))
-    ( is-torsorial-Eq-Œ†
-      ( Œª n h ‚Üí h ~ (map-seq A n))
-      ( Œª n ‚Üí is-torsorial-htpy' (map-seq A n)))
-
-is-equiv-equiv-eq-Seq :
-  { l1 : Level} (A B : Sequence l1) ‚Üí is-equiv (equiv-eq-Seq A B)
-is-equiv-equiv-eq-Seq A =
-  fundamental-theorem-id
-    ( is-torsorial-equiv-Seq A)
-    ( equiv-eq-Seq A)
-
-eq-equiv-Seq :
-  { l1 : Level} {A B : Sequence l1} ‚Üí equiv-Seq A B ‚Üí Id A B
-eq-equiv-Seq {A = A} {B} =
-  map-inv-is-equiv (is-equiv-equiv-eq-Seq A B)
-```
-
-### Cocones on a type sequence
-
-```agda
-cocone-sequence :
-  { l1 l2 : Level} (A : Sequence l1) (X : UU l2) ‚Üí UU (l1 ‚äî l2)
-cocone-sequence A X =
-  Œ£ ( (n : ‚Ñï) ‚Üí type-seq A n ‚Üí X) (Œª i ‚Üí
-    (n : ‚Ñï) ‚Üí (i n) ~ ((i (succ-‚Ñï n)) ‚àò (map-seq A n)))
-
-map-cocone-sequence :
-  { l1 l2 : Level} (A : Sequence l1) {X : UU l2} (c : cocone-sequence A X) ‚Üí
-  ( n : ‚Ñï) ‚Üí type-seq A n ‚Üí X
-map-cocone-sequence A c = pr1 c
-
-triangle-cocone-sequence :
-  { l1 l2 : Level} (A : Sequence l1) {X : UU l2} (c : cocone-sequence A X) ‚Üí
-  ( n : ‚Ñï) ‚Üí
-  ( map-cocone-sequence A c n) ~
-  ( (map-cocone-sequence A c (succ-‚Ñï n)) ‚àò (map-seq A n))
-triangle-cocone-sequence A c = pr2 c
-```
-
-### We characterize the identity type of `cocone-sequence`
-
-```agda
-naturality-htpy-cocone-sequence :
-  { l1 l2 : Level} (A : Sequence l1)
-  {X : UU l2} (c c' : cocone-sequence A X) ‚Üí
-  ( H : (n : ‚Ñï) ‚Üí (map-cocone-sequence A c n) ~ (map-cocone-sequence A c' n)) ‚Üí
-  ( n : ‚Ñï) ‚Üí UU (l1 ‚äî l2)
-naturality-htpy-cocone-sequence A c c' H n =
-  ( (H n) ‚àôh (triangle-cocone-sequence A c' n)) ~
-      ( ( triangle-cocone-sequence A c n) ‚àôh
-        ( (H (succ-‚Ñï n)) ¬∑r (map-seq A n)))
-
-htpy-cocone-sequence :
-  { l1 l2 : Level} (A : Sequence l1) {X : UU l2}
-  ( c c' : cocone-sequence A X) ‚Üí UU (l1 ‚äî l2)
-htpy-cocone-sequence A c c' =
-  Œ£ ( (n : ‚Ñï) ‚Üí (map-cocone-sequence A c n) ~ (map-cocone-sequence A c' n))
-    ( Œª H ‚Üí (n : ‚Ñï) ‚Üí naturality-htpy-cocone-sequence A c c' H n)
-
-reflexive-htpy-cocone-sequence :
-  { l1 l2 : Level} (A : Sequence l1) {X : UU l2} ‚Üí
-  ( c : cocone-sequence A X) ‚Üí htpy-cocone-sequence A c c
-reflexive-htpy-cocone-sequence A c =
-  pair
-    ( Œª n ‚Üí refl-htpy)
-    ( Œª n ‚Üí inv-htpy-right-unit-htpy)
-
-htpy-cocone-sequence-eq :
-  { l1 l2 : Level} (A : Sequence l1) {X : UU l2} ‚Üí
-  ( c c' : cocone-sequence A X) ‚Üí Id c c' ‚Üí htpy-cocone-sequence A c c'
-htpy-cocone-sequence-eq A c .c refl =
-  reflexive-htpy-cocone-sequence A c
-
-is-torsorial-htpy-cocone-sequence :
-  { l1 l2 : Level} (A : Sequence l1) {X : UU l2} (c : cocone-sequence A X) ‚Üí
-  is-torsorial (htpy-cocone-sequence A c)
-is-torsorial-htpy-cocone-sequence A c =
-  is-torsorial-Eq-structure
-    ( Œª j t H ‚Üí
-      (n : ‚Ñï) ‚Üí naturality-htpy-cocone-sequence A c (pair j t) H n)
-    ( is-torsorial-Eq-Œ†
-      ( Œª n j ‚Üí map-cocone-sequence A c n ~ j)
-      ( Œª n ‚Üí is-torsorial-htpy (map-cocone-sequence A c n)))
-    ( pair
-      ( map-cocone-sequence A c)
-      ( Œª n ‚Üí refl-htpy))
-    ( is-torsorial-Eq-Œ†
-      ( Œª n H ‚Üí H ~ ((triangle-cocone-sequence A c n) ‚àôh refl-htpy))
-      ( Œª n ‚Üí is-torsorial-htpy'
-        ( (triangle-cocone-sequence A c n) ‚àôh refl-htpy)))
-
-is-equiv-htpy-cocone-sequence-eq :
-  { l1 l2 : Level} (A : Sequence l1) {X : UU l2} (c c' : cocone-sequence A X) ‚Üí
-  is-equiv (htpy-cocone-sequence-eq A c c')
-is-equiv-htpy-cocone-sequence-eq A c =
-  fundamental-theorem-id
-    ( is-torsorial-htpy-cocone-sequence A c)
-    ( htpy-cocone-sequence-eq A c)
-```
-
-### The universal property of sequential colimits
-
-```agda
-cocone-sequence-map :
-  { l1 l2 l3 : Level} (A : Sequence l1)
-  {X : UU l2} ‚Üí cocone-sequence A X ‚Üí
-  (Y : UU l3) ‚Üí (X ‚Üí Y) ‚Üí cocone-sequence A Y
-cocone-sequence-map A c Y h =
-  pair
-    ( Œª n ‚Üí h ‚àò (map-cocone-sequence A c n))
-    ( Œª n ‚Üí h ¬∑l (triangle-cocone-sequence A c n))
-
-universal-property-sequential-colimit :
-  ( l : Level) {l1 l2 : Level} (A : Sequence l1) {X : UU l2}
-  ( c : cocone-sequence A X) ‚Üí UU (lsuc l ‚äî l1 ‚äî l2)
-universal-property-sequential-colimit l A c =
-  (Y : UU l) ‚Üí is-equiv (cocone-sequence-map A c Y)
-```

From 064251539324ea8547765c4f5b67016e6177cb06 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Thu, 19 Oct 2023 23:21:07 +0200
Subject: [PATCH 12/28] Fix link

---
 src/foundation/universal-property-sequential-limits.lagda.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/foundation/universal-property-sequential-limits.lagda.md b/src/foundation/universal-property-sequential-limits.lagda.md
index a5d6617138..efd141e7fb 100644
--- a/src/foundation/universal-property-sequential-limits.lagda.md
+++ b/src/foundation/universal-property-sequential-limits.lagda.md
@@ -249,4 +249,4 @@ concept.
 ## See also
 
 - For sequential colimits, see
-  [`synthetic-homotopy-theory.27-sequences`](synthetic-homotopy-theory.27-sequences.md)
+  [`synthetic-homotopy-theory.universal-property-sequential-colimits`](synthetic-homotopy-theory.universal-property-sequential-colimits.md)

From 6ef0ea96efa61ef6d288501a322aace1688373af Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Fri, 20 Oct 2023 21:27:19 +0200
Subject: [PATCH 13/28] Formatting, naming fixes

---
 ...dent-universal-property-coequalizers.lagda.md | 16 ++++++++--------
 ...iversal-property-sequential-colimits.lagda.md | 12 ++++++++----
 2 files changed, 16 insertions(+), 12 deletions(-)

diff --git a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
index 5447256ae1..58f04fa92c 100644
--- a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
@@ -57,10 +57,10 @@ module _
   ( dup-coequalizer : dependent-universal-property-coequalizer l4 f g e)
   where
 
-  map-dependent-universal-property-coequalizers :
+  map-dependent-universal-property-coequalizer :
     dependent-cofork f g e P ‚Üí
     (x : X) ‚Üí P x
-  map-dependent-universal-property-coequalizers =
+  map-dependent-universal-property-coequalizer =
     map-inv-is-equiv (dup-coequalizer P)
 ```
 
@@ -76,28 +76,28 @@ module _
   ( k : dependent-cofork f g e P)
   where
 
-  htpy-dependent-cofork-map-dependent-universal-property-coequalizer :
+  htpy-dependent-cofork-dependent-universal-property-coequalizer :
     htpy-dependent-cofork f g P
       ( dependent-cofork-map f g e
-        ( map-dependent-universal-property-coequalizers f g e
+        ( map-dependent-universal-property-coequalizer f g e
           ( dup-coequalizer)
           ( k)))
       ( k)
-  htpy-dependent-cofork-map-dependent-universal-property-coequalizer =
+  htpy-dependent-cofork-dependent-universal-property-coequalizer =
     htpy-dependent-cofork-eq f g P
       ( dependent-cofork-map f g e
-        ( map-dependent-universal-property-coequalizers f g e
+        ( map-dependent-universal-property-coequalizer f g e
           ( dup-coequalizer)
           ( k)))
       ( k)
       ( is-section-map-inv-is-equiv (dup-coequalizer P) k)
 
   abstract
-    uniqueness-dependent-universal-property-coequalizers :
+    uniqueness-dependent-universal-property-coequalizer :
       is-contr
         ( Œ£ ((x : X) ‚Üí P x)
           ( Œª h ‚Üí htpy-dependent-cofork f g P (dependent-cofork-map f g e h) k))
-    uniqueness-dependent-universal-property-coequalizers =
+    uniqueness-dependent-universal-property-coequalizer =
       is-contr-is-equiv'
         ( fiber (dependent-cofork-map f g e) k)
         ( tot
diff --git a/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
index 8c2044d2ff..de9db65bdd 100644
--- a/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
+++ b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
@@ -92,7 +92,7 @@ module _
   abstract
     uniqueness-map-universal-property-sequential-colimit :
       is-contr
-        ( Œ£ (X ‚Üí Y)
+        ( Œ£ ( X ‚Üí Y)
             ( Œª h ‚Üí
               htpy-cocone-sequential-diagram A
                 ( cocone-map-sequential-diagram A c h)
@@ -108,7 +108,11 @@ module _
         ( is-contr-map-is-equiv (up-sequential-colimit Y) c')
 ```
 
-### A cocone under a sequential diagram has the universal property of sequential colimits if and only if the corresponding cofork has the universal property of coequalizers
+### Correspondence between universal properties of sequential colimits and coequalizers
+
+A cocone under a sequential diagram has the universal property of sequential
+colimits if and only if the corresponding cofork has the universal property of
+coequalizers.
 
 ```agda
 module _
@@ -116,7 +120,7 @@ module _
   ( c : cocone-sequential-diagram A X)
   where
 
-  universal-property-cocone-sequential-colimit-universal-property-coequalizer :
+  universal-property-sequential-colimit-universal-property-coequalizer :
     ( {l : Level} ‚Üí
       universal-property-coequalizer l
         ( bottom-map-cofork-cocone-sequential-diagram A)
@@ -124,7 +128,7 @@ module _
         ( cofork-cocone-sequential-diagram A c)) ‚Üí
     ( {l : Level} ‚Üí
       universal-property-sequential-colimit l A c)
-  universal-property-cocone-sequential-colimit-universal-property-coequalizer
+  universal-property-sequential-colimit-universal-property-coequalizer
     ( up-cofork)
     ( Y) =
     is-equiv-comp-htpy

From b78ef5edda326ec234eac063dc9be2f797e35cc7 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Fri, 20 Oct 2023 21:30:09 +0200
Subject: [PATCH 14/28] Dependent universal property of sequential colimits

---
 src/synthetic-homotopy-theory.lagda.md        |   1 +
 ...cocones-under-sequential-diagrams.lagda.md |  70 +++----
 ...rsal-property-sequential-colimits.lagda.md | 185 ++++++++++++++++++
 3 files changed, 221 insertions(+), 35 deletions(-)
 create mode 100644 src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md

diff --git a/src/synthetic-homotopy-theory.lagda.md b/src/synthetic-homotopy-theory.lagda.md
index 1783ff1015..3d536c6c8f 100644
--- a/src/synthetic-homotopy-theory.lagda.md
+++ b/src/synthetic-homotopy-theory.lagda.md
@@ -30,6 +30,7 @@ open import synthetic-homotopy-theory.dependent-sequential-diagrams public
 open import synthetic-homotopy-theory.dependent-suspension-structures public
 open import synthetic-homotopy-theory.dependent-universal-property-coequalizers public
 open import synthetic-homotopy-theory.dependent-universal-property-pushouts public
+open import synthetic-homotopy-theory.dependent-universal-property-sequential-colimits public
 open import synthetic-homotopy-theory.dependent-universal-property-suspensions public
 open import synthetic-homotopy-theory.descent-circle public
 open import synthetic-homotopy-theory.descent-circle-constant-families public
diff --git a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
index 001021bf6b..a264c1dc17 100644
--- a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
@@ -282,18 +282,6 @@ module _
     { l3 : Level} (P : X ‚Üí UU l3)
     where
 
-    dependent-cofork-dependent-cocone-sequential-diagram :
-      dependent-cocone-sequential-diagram A c P ‚Üí
-      dependent-cofork
-        ( bottom-map-cofork-cocone-sequential-diagram A)
-        ( top-map-cofork-cocone-sequential-diagram A)
-        ( cofork-cocone-sequential-diagram A c)
-        ( P)
-    pr1 (dependent-cofork-dependent-cocone-sequential-diagram d) =
-      ind-Œ£ (map-dependent-cocone-sequential-diagram A P d)
-    pr2 (dependent-cofork-dependent-cocone-sequential-diagram d) =
-      ind-Œ£ (coherence-triangle-dependent-cocone-sequential-diagram A P d)
-
     dependent-cocone-dependent-cofork-sequential-diagram :
       dependent-cofork
         ( bottom-map-cofork-cocone-sequential-diagram A)
@@ -316,23 +304,24 @@ module _
           ( P)
           ( e))
 
-    abstract
-      is-section-dependent-cofork-dependent-cocone-sequential-diagram :
-        ( dependent-cocone-dependent-cofork-sequential-diagram ‚àò
-          dependent-cofork-dependent-cocone-sequential-diagram) ~
-        ( id)
-      is-section-dependent-cofork-dependent-cocone-sequential-diagram d =
-        eq-htpy-dependent-cocone-sequential-diagram A P
-          ( dependent-cocone-dependent-cofork-sequential-diagram
-            ( dependent-cofork-dependent-cocone-sequential-diagram d))
-          ( d)
-          ( ev-pair refl-htpy , ev-pair right-unit-htpy)
+    dependent-cofork-dependent-cocone-sequential-diagram :
+      dependent-cocone-sequential-diagram A c P ‚Üí
+      dependent-cofork
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c)
+        ( P)
+    pr1 (dependent-cofork-dependent-cocone-sequential-diagram d) =
+      ind-Œ£ (map-dependent-cocone-sequential-diagram A P d)
+    pr2 (dependent-cofork-dependent-cocone-sequential-diagram d) =
+      ind-Œ£ (coherence-triangle-dependent-cocone-sequential-diagram A P d)
 
-      is-retraction-dependent-cofork-dependent-cocone-sequential-diagram :
+    abstract
+      is-section-dependent-cocone-dependent-cofork-sequential-diagram :
         ( dependent-cofork-dependent-cocone-sequential-diagram ‚àò
           dependent-cocone-dependent-cofork-sequential-diagram) ~
         ( id)
-      is-retraction-dependent-cofork-dependent-cocone-sequential-diagram e =
+      is-section-dependent-cocone-dependent-cofork-sequential-diagram e =
         eq-htpy-dependent-cofork
           ( bottom-map-cofork-cocone-sequential-diagram A)
           ( top-map-cofork-cocone-sequential-diagram A)
@@ -342,25 +331,36 @@ module _
           ( e)
           ( refl-htpy , right-unit-htpy)
 
-    is-equiv-dependent-cofork-dependent-cocone-sequential-diagram :
-      is-equiv dependent-cofork-dependent-cocone-sequential-diagram
-    is-equiv-dependent-cofork-dependent-cocone-sequential-diagram =
+      is-retraction-dependent-cocone-dependent-cofork-sequential-diagram :
+        ( dependent-cocone-dependent-cofork-sequential-diagram ‚àò
+          dependent-cofork-dependent-cocone-sequential-diagram) ~
+        ( id)
+      is-retraction-dependent-cocone-dependent-cofork-sequential-diagram d =
+        eq-htpy-dependent-cocone-sequential-diagram A P
+          ( dependent-cocone-dependent-cofork-sequential-diagram
+            ( dependent-cofork-dependent-cocone-sequential-diagram d))
+          ( d)
+          ( ev-pair refl-htpy , ev-pair right-unit-htpy)
+
+    is-equiv-dependent-cocone-dependent-cofork-sequential-diagram :
+      is-equiv dependent-cocone-dependent-cofork-sequential-diagram
+    is-equiv-dependent-cocone-dependent-cofork-sequential-diagram =
       is-equiv-is-invertible
-        ( dependent-cocone-dependent-cofork-sequential-diagram)
-        ( is-retraction-dependent-cofork-dependent-cocone-sequential-diagram)
-        ( is-section-dependent-cofork-dependent-cocone-sequential-diagram)
+        ( dependent-cofork-dependent-cocone-sequential-diagram)
+        ( is-retraction-dependent-cocone-dependent-cofork-sequential-diagram)
+        ( is-section-dependent-cocone-dependent-cofork-sequential-diagram)
 
     equiv-dependent-cofork-dependent-cocone-sequential-diagram :
-      dependent-cocone-sequential-diagram A c P ‚âÉ
       dependent-cofork
         ( bottom-map-cofork-cocone-sequential-diagram A)
         ( top-map-cofork-cocone-sequential-diagram A)
         ( cofork-cocone-sequential-diagram A c)
-        ( P)
+        ( P) ‚âÉ
+      dependent-cocone-sequential-diagram A c P
     pr1 equiv-dependent-cofork-dependent-cocone-sequential-diagram =
-      dependent-cofork-dependent-cocone-sequential-diagram
+      dependent-cocone-dependent-cofork-sequential-diagram
     pr2 equiv-dependent-cofork-dependent-cocone-sequential-diagram =
-      is-equiv-dependent-cofork-dependent-cocone-sequential-diagram
+      is-equiv-dependent-cocone-dependent-cofork-sequential-diagram
 
   triangle-dependent-cocone-dependent-cofork-sequential-diagram :
     { l3 : Level} (P : X ‚Üí UU l3) ‚Üí
diff --git a/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md b/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
new file mode 100644
index 0000000000..846023c3d1
--- /dev/null
+++ b/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
@@ -0,0 +1,185 @@
+# The dependent universal property of sequential colimits
+
+```agda
+module synthetic-homotopy-theory.dependent-universal-property-sequential-colimits where
+```
+
+<details><summary>Imports</summary>
+
+```agda
+open import foundation.contractible-maps
+open import foundation.contractible-types
+open import foundation.dependent-pair-types
+open import foundation.equivalences
+open import foundation.fibers-of-maps
+open import foundation.function-types
+open import foundation.functoriality-dependent-pair-types
+open import foundation.homotopies
+open import foundation.universe-levels
+
+open import synthetic-homotopy-theory.cocones-under-sequential-diagrams
+open import synthetic-homotopy-theory.dependent-cocones-under-sequential-diagrams
+open import synthetic-homotopy-theory.dependent-coforks
+open import synthetic-homotopy-theory.dependent-universal-property-coequalizers
+open import synthetic-homotopy-theory.sequential-diagrams
+open import synthetic-homotopy-theory.universal-property-sequential-colimits
+```
+
+</details>
+
+## Definitions
+
+### The dependent universal property of sequential colimits
+
+```agda
+module _
+  { l1 l2 : Level} (l : Level) (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  dependent-universal-property-sequential-colimit : UU (l1 ‚äî l2 ‚äî lsuc l)
+  dependent-universal-property-sequential-colimit =
+    ( P : X ‚Üí UU l) ‚Üí is-equiv (dependent-cocone-map-sequential-diagram A c P)
+```
+
+### The map induced by the dependent universal property of sequential colimits
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X) {P : X ‚Üí UU l3}
+  ( dup-sequential-colimit :
+    dependent-universal-property-sequential-colimit l3 A c)
+  where
+
+  map-dependent-universal-property-sequential-colimit :
+    dependent-cocone-sequential-diagram A c P ‚Üí
+    ( x : X) ‚Üí P x
+  map-dependent-universal-property-sequential-colimit =
+    map-inv-is-equiv (dup-sequential-colimit P)
+```
+
+## Properties
+
+### The mediating map obtained by the dependent universal property is unique
+
+```agda
+module _
+  { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X) {P : X ‚Üí UU l3}
+  ( dup-sequential-colimit :
+    dependent-universal-property-sequential-colimit l3 A c)
+  ( d : dependent-cocone-sequential-diagram A c P)
+  where
+
+  htpy-dependent-cocone-dependent-universal-property-sequential-colimit :
+    htpy-dependent-cocone-sequential-diagram A P
+      ( dependent-cocone-map-sequential-diagram A c P
+        ( map-dependent-universal-property-sequential-colimit A c
+          ( dup-sequential-colimit)
+          ( d)))
+      ( d)
+  htpy-dependent-cocone-dependent-universal-property-sequential-colimit =
+    htpy-eq-dependent-cocone-sequential-diagram A P
+      ( dependent-cocone-map-sequential-diagram A c P
+        ( map-dependent-universal-property-sequential-colimit A c
+          ( dup-sequential-colimit)
+          ( d)))
+      ( d)
+      ( is-section-map-inv-is-equiv (dup-sequential-colimit P) d)
+
+  abstract
+    uniqueness-dependent-universal-property-sequential-colimit :
+      is-contr
+        ( Œ£ ( ( x : X) ‚Üí P x)
+            ( Œª h ‚Üí
+              htpy-dependent-cocone-sequential-diagram A P
+                ( dependent-cocone-map-sequential-diagram A c P h)
+                ( d)))
+    uniqueness-dependent-universal-property-sequential-colimit =
+      is-contr-equiv'
+        ( fiber (dependent-cocone-map-sequential-diagram A c P) d)
+        ( equiv-tot
+          ( Œª h ‚Üí
+            extensionality-dependent-cocone-sequential-diagram A P
+              ( dependent-cocone-map-sequential-diagram A c P h)
+              ( d)))
+        ( is-contr-map-is-equiv (dup-sequential-colimit P) d)
+```
+
+### Correspondence between dependent universal properties of sequential colimits and coequalizers
+
+A cocone under a sequential diagram has the dependent universal property of
+sequential colimits if and only if the corresponding cofork has the dependent
+universal property of coequalizers.
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  dependent-universal-property-sequential-colimit-dependent-universal-property-coequalizer :
+    ( {l : Level} ‚Üí
+      dependent-universal-property-coequalizer l
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c)) ‚Üí
+    ( {l : Level} ‚Üí
+      dependent-universal-property-sequential-colimit l A c)
+  dependent-universal-property-sequential-colimit-dependent-universal-property-coequalizer
+    ( dup-coequalizer)
+    ( P) =
+    is-equiv-comp-htpy
+      ( dependent-cocone-map-sequential-diagram A c P)
+      ( dependent-cocone-dependent-cofork-sequential-diagram A c P)
+      ( dependent-cofork-map
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c))
+      ( triangle-dependent-cocone-dependent-cofork-sequential-diagram A c P)
+      ( dup-coequalizer P)
+      ( is-equiv-dependent-cocone-dependent-cofork-sequential-diagram A c P)
+```
+
+### The non-dependent and dependent universal properties of sequential colimits are logically equivalent
+
+```agda
+module _
+  { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
+  ( c : cocone-sequential-diagram A X)
+  where
+
+  universal-property-dependent-universal-property-sequential-colimit :
+    ( {l : Level} ‚Üí dependent-universal-property-sequential-colimit l A c) ‚Üí
+    ( {l : Level} ‚Üí universal-property-sequential-colimit l A c)
+  universal-property-dependent-universal-property-sequential-colimit
+    ( dup-sequential-colimit)
+    ( Y) =
+    is-equiv-comp-htpy
+      ( cocone-map-sequential-diagram A c)
+      ( map-compute-dependent-cocone-constant-family-sequential-diagram A c Y)
+      ( dependent-cocone-map-sequential-diagram A c (Œª _ ‚Üí Y))
+      ( triangle-compute-dependent-cocone-constant-family-sequential-diagram A c
+        ( Y))
+      ( dup-sequential-colimit (Œª _ ‚Üí Y))
+      ( is-equiv-map-equiv
+        ( compute-dependent-cocone-constant-family-sequential-diagram A c Y))
+
+  dependent-universal-property-universal-property-sequential-colimit :
+    ( {l : Level} ‚Üí universal-property-sequential-colimit l A c) ‚Üí
+    ( {l : Level} ‚Üí dependent-universal-property-sequential-colimit l A c)
+  dependent-universal-property-universal-property-sequential-colimit
+    ( up-sequential-diagram) =
+    dependent-universal-property-sequential-colimit-dependent-universal-property-coequalizer
+      ( A)
+      ( c)
+      ( dependent-universal-property-universal-property-coequalizer
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c)
+        ( universal-property-coequalizer-universal-property-cocone-sequential-colimit
+          ( A)
+          ( c)
+          ( up-sequential-diagram)))
+```

From 50fbda24dc79cfb5973ad3d0da4fe19f8faf9e7f Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 17:44:24 +0200
Subject: [PATCH 15/28] Prose for sequential diagrams

---
 .../sequential-diagrams.lagda.md                   | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
index 59c3aba4ea..a752d2495b 100644
--- a/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/sequential-diagrams.lagda.md
@@ -20,7 +20,19 @@ open import foundation.universe-levels
 
 A **sequential diagram** `(A, a)` is a [sequence](foundation.sequences.md) of
 types `A : ‚Ñï ‚Üí ùì§` over the natural numbers, equipped with a family of maps
-`a‚Çô : A n ‚Üí A (n + 1)` for all `n`.
+`a‚Çô : A‚Çô ‚Üí A‚Çô‚Çä‚ÇÅ` for all `n`.
+
+They can be represented by diagrams
+
+```text
+     a‚ÇÄ      a‚ÇÅ      a‚ÇÇ
+ A‚ÇÄ ---> A‚ÇÅ ---> A‚ÇÇ ---> ‚ãØ
+```
+
+extending infinitely to the right.
+
+Sequential diagrams are dual to [towers](foundation.towers.md), and are also
+sometimes called **cotowers**.
 
 ## Definition
 

From 9879308bf6c97bef77a316da886730b9295ca8fe Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 18:14:00 +0200
Subject: [PATCH 16/28] Prose for dependent sequential diagrams

---
 .../dependent-sequential-diagrams.lagda.md    | 43 ++++++++++++++++++-
 1 file changed, 41 insertions(+), 2 deletions(-)

diff --git a/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
index c5f73a7a7e..f9683868c3 100644
--- a/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-sequential-diagrams.lagda.md
@@ -24,11 +24,30 @@ open import synthetic-homotopy-theory.sequential-diagrams
 A **dependent sequential diagram** over a
 [sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md) `(A, a)`
 is a [sequence](foundation.dependent-sequences.md) of families of types
-`B : (n : ‚Ñï) ‚Üí A n ‚Üí ùì§` over the types in the base sequential diagram, equipped
+`B : (n : ‚Ñï) ‚Üí A‚Çô ‚Üí ùì§` over the types in the base sequential diagram, equipped
 with fiberwise maps
 
 ```text
-b‚Çô : (x : A n) ‚Üí B n x ‚Üí B (n + 1) (a‚Çô x).
+b‚Çô : (x : A‚Çô) ‚Üí B‚Çô x ‚Üí B‚Çô‚Çä‚ÇÅ (a‚Çô x).
+```
+
+They can be thought of as a family of sequential diagrams
+
+```text
+       b‚Çô(x)           b‚Çô‚Çä‚ÇÅ(a‚Çô(x))
+ B‚Çô(x) ----> B‚Çô‚Çä‚ÇÅ(a‚Çô(x)) -------> B‚Çô‚Çä‚ÇÇ(a‚Çô‚Çä‚ÇÅ(a‚Çô(x))) ----> ‚ãØ,
+```
+
+one for each `x : A‚Çô`, or as a sequence fibered over `(A, a)`, visualised as
+
+```text
+     b‚ÇÄ      b‚ÇÅ      b‚ÇÇ
+ B‚ÇÄ ---> B‚ÇÅ ---> B‚ÇÇ ---> ‚ãØ
+ |       |       |
+ V       V       V
+ V       V       V
+ A‚ÇÄ ---> A‚ÇÅ ---> A‚ÇÇ ---> ‚ãØ.
+     a‚ÇÄ      a‚ÇÅ      a‚ÇÇ
 ```
 
 ## Definitions
@@ -69,6 +88,9 @@ module _
 
 ### Constant dependent sequential diagrams
 
+Constant dependent sequential diagrams are dependent sequential diagrams where
+the dependent type family `B` is [constant](foundation.constant-maps.md).
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
@@ -81,6 +103,23 @@ module _
 
 ### Sections of dependent sequential diagrams
 
+A **section of a dependent sequential diagram** `(B, b)` is a
+[sequence](foundation.dependent-sequences.md) of sections
+`s‚Çô : (x : A‚Çô) ‚Üí B‚Çô(x)` satisfying the naturality condition that all squares of
+the form
+
+```text
+          b‚Çô(x)
+  B‚Çô(x) -------> B‚Çô‚Çä‚ÇÅ(a‚Çô(x))
+    ^                ^
+ s‚Çô |                | s‚Çô‚Çä‚ÇÅ
+    |                |
+ (x : A‚Çô) ---> (a‚Çô(x) : A‚Çô‚Çä‚ÇÅ)
+           a‚Çô
+```
+
+[commute](foundation.commuting-squares-of-maps.md).
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1)

From a362c1e3fdb379b480a2dfb692915632c783c8e2 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 18:45:01 +0200
Subject: [PATCH 17/28] Prose for morphisms between sequential diagrams

---
 .../morphisms-sequential-diagrams.lagda.md    | 45 +++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
index c70d122e18..0844d164fe 100644
--- a/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
@@ -31,6 +31,25 @@ open import synthetic-homotopy-theory.sequential-diagrams
 
 </details>
 
+## Idea
+
+A **morphism between
+[sequential diagrams](synthetic-homotopy-theory.sequential-diagrams.md)**
+`f : (A, a) ‚Üí (B, b)` is a [sequence](foundation.dependent-sequences.md) of maps
+`f‚Çô : A‚Çô ‚Üí B‚Çô` satisfying the naturality condition that all squares of the form
+
+```text
+        a‚Çô
+    A‚Çô ---> A‚Çô‚Çä‚ÇÅ
+    |       |
+ f‚Çô |       | f‚Çô‚Çä‚ÇÅ
+    v       v
+    B‚Çô ---> B‚Çô‚Çä‚ÇÅ
+        b‚Çô
+```
+
+[commute](foundation.commuting-squares-of-maps.md).
+
 ## Definitions
 
 ### Morphisms of sequential diagrams
@@ -81,6 +100,9 @@ module _
 
 ### The identity morphism of sequential diagrams
 
+All sequential diagrams have an **identity morphism** constructed from the
+identity function on the underlying types.
+
 ```agda
 module _
   { l1 : Level} (A : sequential-diagram l1)
@@ -93,6 +115,9 @@ module _
 
 ### Composition of morphisms of sequential diagrams
 
+**Composition of morphisms** is induced by composition of the underlying maps
+and by pasting diagrams.
+
 ```agda
 module _
   { l1 l2 l3 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)
@@ -120,6 +145,23 @@ module _
 
 ### Homotopies between morphisms of sequential diagrams
 
+A **homotopy** between morphisms `f, g : (A, a) ‚Üí (B, b)` consists of a
+[sequence](foundation.dependent-sequences.md) of
+[homotopies](foundation.homotopies.md) `H‚Çô : f‚Çô ~ g‚Çô` and a coherence datum
+filling the cylinders
+
+```text
+              a‚Çô
+      A‚Çô ----------> A‚Çô‚Çä‚ÇÅ
+      / \            / \
+     / H‚Çô\          /H‚Çô‚Çä‚ÇÅ\
+ f‚Çô |  => | g‚Çô f‚Çô‚Çä‚ÇÅ |  => | g‚Çô‚Çä‚ÇÅ
+     \   /          \   /
+      \ /            \ /
+      B‚Çô ----------> B‚Çô‚Çä‚ÇÅ.
+              b‚Çô
+```
+
 ```agda
 module _
   { l1 l2 : Level} {A : sequential-diagram l1} (B : sequential-diagram l2)
@@ -172,6 +214,9 @@ module _
 
 ### Characterization of equality of morphisms of sequential diagrams
 
+[Equality](foundation.identity-types.md) of morphisms of sequential diagrams is
+captured by a homotopy between them.
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1) (B : sequential-diagram l2)

From ed25f4313f0bedddc10ef0964ef83c811bdaaefa Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 18:52:21 +0200
Subject: [PATCH 18/28] Prose for equivalence of sequential diagrams

---
 .../equivalences-sequential-diagrams.lagda.md       | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
index 3bb3e9162c..130c673243 100644
--- a/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
@@ -28,6 +28,16 @@ open import synthetic-homotopy-theory.sequential-diagrams
 
 </details>
 
+## Idea
+
+An **equivalence of sequential diagrams** `(A, a)` and `(B, b)` is a
+[sequence](foundation.dependent-sequences.md) of
+[equivalences](foundation.equivalences.md) `e‚Çô : A‚Çô ‚âÉ B‚Çô` such that their
+underlying maps form a
+[morphism of sequential diagrams](synthetic-homotopy-theory.morphisms-sequential-diagrams.md).
+
+Specifically, the underlying maps need to satisfy the same naturality condition.
+
 ## Definitions
 
 ### Equivalences of sequential diagrams
@@ -112,6 +122,9 @@ module _
 
 ### Characterization of equality of sequential diagrams
 
+[Equality](foundation.identity-types.md) of sequential diagrams is captured by
+an equivalence between them.
+
 ```agda
 equiv-eq-sequential-diagram :
   { l1 : Level} (A B : sequential-diagram l1) ‚Üí

From 21e5a9902c2fe42c4b11b683348de7c3dc2fd813 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 19:39:55 +0200
Subject: [PATCH 19/28] Prose for cocones under sequential diagramd

---
 ...cocones-under-sequential-diagrams.lagda.md | 58 ++++++++++++++++++-
 1 file changed, 56 insertions(+), 2 deletions(-)

diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index d9933f2ca2..1c66c11747 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -43,8 +43,8 @@ family of [homotopies](foundation.homotopies.md) `H‚Çô` asserting that the
 triangles
 
 ```text
-      a‚Çô
- A n ----> A (n + 1)
+       a‚Çô
+ A‚Çô ------> A‚Çô‚Çä‚ÇÅ
    \       /
     \     /
   i‚Çô \   / i‚Çô‚Çä‚ÇÅ
@@ -96,6 +96,16 @@ module _
 
 ### Homotopies of cocones under a sequential diagram
 
+A **homotopy** between two cocones `(X, i, H)` and `(X, j, L)` with the same
+vertex consists of a [sequence](foundation.dependent-sequences.md) of
+[homotopies](foundation.homotopies.md) `K‚Çô : i‚Çô ~ j‚Çô` and a coherence datum
+filling the "pinched cylinder" with the faces `K‚Çô`, `H‚Çô`, `L‚Çô` and `K‚Çô‚Çä‚ÇÅ`.
+
+The coherence datum may be better understood by viewing a cocone as a
+[morphism](synthetic-homotopy-theory.morphisms-sequential-diagrams.md) from
+`(A, a)` to the constant cocone `(n ‚Ü¶ X, n ‚Ü¶ id)`. Then a homotopy of cocones is
+a regular homotopy of morphisms of sequential diagrams.
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
@@ -147,6 +157,9 @@ module _
 
 ### Postcomposing cocones under a sequential diagram with a map
 
+Given a cocone `c` with vertex `X` under `(A, a)` and a map `f : X ‚Üí Y`, we may
+extend `c` to a cocone with vertex `Y`.
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
@@ -166,6 +179,9 @@ module _
 
 ### Characterization of identity types of cocones under sequential diagrams
 
+[Equality](foundation.identity-types.md) of cocones with the same vertex is
+captured by a homotopy between them.
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
@@ -244,6 +260,10 @@ module _
 
 ### Postcomposing cocones under a sequential colimit distributes over function composition
 
+In other words, extending a cocone `c` with vertex `X` by the map
+`k ‚àò h : X ‚Üí Z` results in the same cocone as first extending by `h` and then by
+`k`.
+
 ```agda
 module _
   { l1 l2 l3 l4 : Level} (A : sequential-diagram l1)
@@ -267,6 +287,40 @@ module _
 
 ### Cocones under sequential diagrams are a special case of coequalizers
 
+The data of a cocone
+
+```text
+       a‚Çô
+ A‚Çô ------> A‚Çô‚Çä‚ÇÅ
+   \  H‚Çô   /
+    \ =>  /
+  i‚Çô \   / i‚Çô‚Çä‚ÇÅ
+      V V
+       X
+```
+
+can be [uncurried](foundation.dependent-pair-types.md) to get the equivalent
+diagram comprising of the single triangle
+
+```text
+         tot‚Çä‚ÇÅ a
+ (Œ£ ‚Ñï A) ------> (Œ£ ‚Ñï A)
+        \       /
+         \     /
+       i  \   /  i
+           V V
+            X
+```
+
+which is exactly a cofork of the identity map and `tot‚Çä‚ÇÅ a`.
+
+Under this mapping
+[sequential colimits](synthetic-homotopy-theory.universal-property-sequential-colimits.md)
+correspond to
+[coequalizers](synthetic-homotopy-theory.universal-property-coequalizers.md),
+which is formalized in
+[universal-property-sequential-colimits](synthetic-homotopy-theory.universal-property-sequential-colimits.md).
+
 ```agda
 module _
   { l1 : Level} (A : sequential-diagram l1)

From 2812ce5347d8c9b36505d517dafe55791fda0f18 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 20:24:39 +0200
Subject: [PATCH 20/28] Prose for dependent cocones under sequential diagrams

---
 ...cocones-under-sequential-diagrams.lagda.md | 43 ++++++++++++++++---
 1 file changed, 37 insertions(+), 6 deletions(-)

diff --git a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
index a264c1dc17..f3faa0258f 100644
--- a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
@@ -15,6 +15,7 @@ open import foundation.binary-homotopies
 open import foundation.commuting-triangles-of-maps
 open import foundation.constant-type-families
 open import foundation.contractible-types
+open import foundation.dependent-homotopies
 open import foundation.dependent-identifications
 open import foundation.dependent-pair-types
 open import foundation.equality-dependent-function-types
@@ -37,6 +38,21 @@ open import synthetic-homotopy-theory.sequential-diagrams
 
 </details>
 
+## Idea
+
+Given a [sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)
+`(A, a)`, a
+[cocone](synthetic-homotopy-theory.cocones-under-sequential-diagrams.md) `c`
+with vertex `X` under it, and a type family `P : X ‚Üí ùì§`, we may construct
+_dependent_ cocones on `P` over `c`.
+
+A **dependent cocone under a
+[sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)** on `P`
+over `c ‚âê (X, i, H)` consists of a [sequence](foundation.dependent-sequences.md)
+of dependent maps `i'‚Çô : (x : A‚Çô) ‚Üí P (i‚Çô x)` and a sequence of
+[dependent homotopies](foundation.dependent-homotopies.md)
+`H'‚Çô : i'‚Çô ~ i'‚Çô‚Çä‚ÇÅ ‚àò a‚Çô` over `H`.
+
 ## Definitions
 
 ### Dependent cocones under sequential diagrams
@@ -52,11 +68,11 @@ module _
     Œ£ ( ( n : ‚Ñï) (a : family-sequential-diagram A n) ‚Üí
         P (map-cocone-sequential-diagram A c n a))
       ( Œª i ‚Üí
-        ( n : ‚Ñï) ‚Üí (a : family-sequential-diagram A n) ‚Üí
-        dependent-identification P
-          ( coherence-triangle-cocone-sequential-diagram A c n a)
-          ( i n a)
-          ( i (succ-‚Ñï n) (map-sequential-diagram A n a)))
+        ( n : ‚Ñï) ‚Üí
+        dependent-homotopy (Œª _ ‚Üí P)
+          ( coherence-triangle-cocone-sequential-diagram A c n)
+          ( i n)
+          ( i (succ-‚Ñï n) ‚àò map-sequential-diagram A n))
 ```
 
 ### Components of dependent cocones under sequential diagrams
@@ -86,6 +102,10 @@ module _
 
 ### Homotopies of dependent cocones under sequential diagrams
 
+A **homotopy** of dependent cocones `(P, i', H')` and `(P, j', L')` consists of
+a sequence of [homotopies](foundation.homotopies.md) `K‚Çô : i'‚Çô ~ j'‚Çô` and a
+coherence datum.
+
 ```agda
 module _
   { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
@@ -142,6 +162,9 @@ module _
 
 ### Obtaining dependent cocones under sequential diagrams by postcomposing cocones under sequential diagrams with dependent maps
 
+Given a cocone `c` with vertex `X`, and a dependent map `h : (x : X) ‚Üí P x`, we
+may extend `c` to a dependent cocone on `P` over `c`.
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}
@@ -159,7 +182,10 @@ module _
 
 ## Properties
 
-### Characterization of identity types of cocones under sequential diagrams
+### Characterization of identity types of dependent cocones under sequential diagrams
+
+[Equality](foundation.identity-types.md) of dependent cocones is captured by a
+homotopy between them.
 
 ```agda
 module _
@@ -272,6 +298,11 @@ module _
 
 ### Dependent cocones under sequential diagram are special cases of dependent coforks
 
+Just like with the regular
+[cocones under sequential diagrams](synthetic-homotopy-theory.cocones-under-sequential-diagrams.md),
+we have an analogous correspondence between dependent cocones over a cocone `c`
+and dependent coforks over the cofork corresponding to `c`.
+
 ```agda
 module _
   { l1 l2 : Level} (A : sequential-diagram l1) {X : UU l2}

From d61f90b43173e3bc980d49b0967453ec59a837e6 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 20:35:37 +0200
Subject: [PATCH 21/28] Prose for the unviersal property of sequential colimits

---
 ...rsal-property-sequential-colimits.lagda.md | 35 +++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
index de9db65bdd..bbd4b2bbc0 100644
--- a/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
+++ b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
@@ -31,6 +31,28 @@ open import synthetic-homotopy-theory.universal-property-coequalizers
 
 </details>
 
+## Idea
+
+Given a [sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)
+`(A, a)`, consider a
+[cocone under it](synthetic-homotopy-theory.cocones-under-sequential-diagrams.md)
+`c` with vertex `X`. The **universal property of sequential colimits** is the
+statement that the cocone postcomposition map
+
+```text
+cocone-map-sequential-diagram : (X ‚Üí Y) ‚Üí cocone-sequential-diagram Y
+```
+
+is an [equivalence](foundation.equivalences.md).
+
+A sequential colimit `X` may be visualized as a "point in infinity" in the
+diagram
+
+```text
+     a‚ÇÄ      a‚ÇÅ      a‚ÇÇ     i
+ A‚ÇÄ ---> A‚ÇÅ ---> A‚ÇÇ ---> ‚ãØ --> X.
+```
+
 ## Definitions
 
 ### The universal property of sequential colimits
@@ -48,6 +70,9 @@ module _
 
 ### The map induced by the universal property of sequential colimits
 
+The universal property allows us to construct a map from the colimit by
+providing a cocone under the sequential diagram.
+
 ```agda
 module _
   { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2}
@@ -111,8 +136,9 @@ module _
 ### Correspondence between universal properties of sequential colimits and coequalizers
 
 A cocone under a sequential diagram has the universal property of sequential
-colimits if and only if the corresponding cofork has the universal property of
-coequalizers.
+colimits if and only if the
+[corresponding cofork](synthetic-homotopy-theory.cocones-under-sequential-diagrams.md)
+has the universal property of coequalizers.
 
 ```agda
 module _
@@ -167,6 +193,11 @@ module _
 
 ### 3-for-2 property of sequential colimits
 
+Given two cocones under a sequential diagram, one of which has the universal
+property of sequential colimits, and a map between their vertices, we prove that
+the other has the universal property if and only if the map is an
+[equivalence](foundation.equivalences.md).
+
 ```agda
 module _
   { l1 l2 l3 : Level} (A : sequential-diagram l1) {X : UU l2} {Y : UU l3}

From 64911965433ddf255a773afa68e1dbc837d5ad03 Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 20:38:14 +0200
Subject: [PATCH 22/28] Prose for the dependent universal property of
 sequential colimits

---
 ...niversal-property-sequential-colimits.lagda.md | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md b/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
index 846023c3d1..40b260ad47 100644
--- a/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
@@ -27,6 +27,21 @@ open import synthetic-homotopy-theory.universal-property-sequential-colimits
 
 </details>
 
+## Idea
+
+Given a [sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)
+`(A, a)`, consider a
+[cocone under it](synthetic-homotopy-theory.cocones-under-sequential-diagrams.md)
+`c` with vertex `X`. The **dependent universal property of sequential colimits**
+is the statement that the dependent cocone postcomposition map
+
+```text
+dependent-cocone-map-sequential-diagram :
+  ((x : X) ‚Üí P x) ‚Üí dependent-cocone-sequential-diagram P
+```
+
+is an [equivalence](foundation.equivalences.md).
+
 ## Definitions
 
 ### The dependent universal property of sequential colimits

From 8df33add456ea15f7ecc36d8ce6427e0fe006f7a Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 21:52:06 +0200
Subject: [PATCH 23/28] Consistent names

---
 ...cocones-under-sequential-diagrams.lagda.md | 70 +++++++++----------
 ...rsal-property-sequential-colimits.lagda.md | 36 ++++++++--
 ...rsal-property-sequential-colimits.lagda.md |  4 +-
 3 files changed, 66 insertions(+), 44 deletions(-)

diff --git a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
index f3faa0258f..d1588679ad 100644
--- a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
@@ -254,10 +254,10 @@ module _
   ( c : cocone-sequential-diagram A X) (Y : UU l3)
   where
 
-  compute-dependent-cocone-constant-family-sequential-diagram :
+  compute-dependent-cocone-sequential-diagram-constant-family :
     ( dependent-cocone-sequential-diagram A c (Œª _ ‚Üí Y)) ‚âÉ
     ( cocone-sequential-diagram A Y)
-  compute-dependent-cocone-constant-family-sequential-diagram =
+  compute-dependent-cocone-sequential-diagram-constant-family =
     equiv-tot
       ( Œª i ‚Üí
         equiv-Œ†-equiv-family
@@ -271,21 +271,21 @@ module _
                       ( i n a)))
                   ( i (succ-‚Ñï n) (map-sequential-diagram A n a)))))
 
-  map-compute-dependent-cocone-constant-family-sequential-diagram :
+  map-compute-dependent-cocone-sequential-diagram-constant-family :
     dependent-cocone-sequential-diagram A c (Œª _ ‚Üí Y) ‚Üí
     cocone-sequential-diagram A Y
-  map-compute-dependent-cocone-constant-family-sequential-diagram =
-    map-equiv compute-dependent-cocone-constant-family-sequential-diagram
+  map-compute-dependent-cocone-sequential-diagram-constant-family =
+    map-equiv compute-dependent-cocone-sequential-diagram-constant-family
 
-  triangle-compute-dependent-cocone-constant-family-sequential-diagram :
+  triangle-compute-dependent-cocone-sequential-diagram-constant-family :
     coherence-triangle-maps
       ( cocone-map-sequential-diagram A c)
-      ( map-compute-dependent-cocone-constant-family-sequential-diagram)
+      ( map-compute-dependent-cocone-sequential-diagram-constant-family)
       ( dependent-cocone-map-sequential-diagram A c (Œª _ ‚Üí Y))
-  triangle-compute-dependent-cocone-constant-family-sequential-diagram h =
+  triangle-compute-dependent-cocone-sequential-diagram-constant-family h =
     eq-htpy-cocone-sequential-diagram A
       ( cocone-map-sequential-diagram A c h)
-      ( map-compute-dependent-cocone-constant-family-sequential-diagram
+      ( map-compute-dependent-cocone-sequential-diagram-constant-family
         ( dependent-cocone-map-sequential-diagram A c (Œª _ ‚Üí Y) h))
       ( ( ev-pair refl-htpy) ,
         ( Œª n a ‚Üí
@@ -296,7 +296,7 @@ module _
                 ( coherence-triangle-cocone-sequential-diagram A c n a)))))
 ```
 
-### Dependent cocones under sequential diagram are special cases of dependent coforks
+### Dependent cocones under sequential diagrams are special cases of dependent coforks
 
 Just like with the regular
 [cocones under sequential diagrams](synthetic-homotopy-theory.cocones-under-sequential-diagrams.md),
@@ -313,21 +313,21 @@ module _
     { l3 : Level} (P : X ‚Üí UU l3)
     where
 
-    dependent-cocone-dependent-cofork-sequential-diagram :
+    dependent-cocone-sequential-diagram-dependent-cofork :
       dependent-cofork
         ( bottom-map-cofork-cocone-sequential-diagram A)
         ( top-map-cofork-cocone-sequential-diagram A)
         ( cofork-cocone-sequential-diagram A c)
         ( P) ‚Üí
       dependent-cocone-sequential-diagram A c P
-    pr1 (dependent-cocone-dependent-cofork-sequential-diagram e) =
+    pr1 (dependent-cocone-sequential-diagram-dependent-cofork e) =
       ev-pair
         ( map-dependent-cofork
           ( bottom-map-cofork-cocone-sequential-diagram A)
           ( top-map-cofork-cocone-sequential-diagram A)
           ( P)
           ( e))
-    pr2 (dependent-cocone-dependent-cofork-sequential-diagram e) =
+    pr2 (dependent-cocone-sequential-diagram-dependent-cofork e) =
       ev-pair
         ( coherence-dependent-cofork
           ( bottom-map-cofork-cocone-sequential-diagram A)
@@ -348,64 +348,64 @@ module _
       ind-Œ£ (coherence-triangle-dependent-cocone-sequential-diagram A P d)
 
     abstract
-      is-section-dependent-cocone-dependent-cofork-sequential-diagram :
+      is-section-dependent-cocone-sequential-diagram-dependent-cofork :
         ( dependent-cofork-dependent-cocone-sequential-diagram ‚àò
-          dependent-cocone-dependent-cofork-sequential-diagram) ~
+          dependent-cocone-sequential-diagram-dependent-cofork) ~
         ( id)
-      is-section-dependent-cocone-dependent-cofork-sequential-diagram e =
+      is-section-dependent-cocone-sequential-diagram-dependent-cofork e =
         eq-htpy-dependent-cofork
           ( bottom-map-cofork-cocone-sequential-diagram A)
           ( top-map-cofork-cocone-sequential-diagram A)
           ( P)
           ( dependent-cofork-dependent-cocone-sequential-diagram
-            ( dependent-cocone-dependent-cofork-sequential-diagram e))
+            ( dependent-cocone-sequential-diagram-dependent-cofork e))
           ( e)
           ( refl-htpy , right-unit-htpy)
 
-      is-retraction-dependent-cocone-dependent-cofork-sequential-diagram :
-        ( dependent-cocone-dependent-cofork-sequential-diagram ‚àò
+      is-retraction-dependent-cocone-sequential-diagram-dependent-cofork :
+        ( dependent-cocone-sequential-diagram-dependent-cofork ‚àò
           dependent-cofork-dependent-cocone-sequential-diagram) ~
         ( id)
-      is-retraction-dependent-cocone-dependent-cofork-sequential-diagram d =
+      is-retraction-dependent-cocone-sequential-diagram-dependent-cofork d =
         eq-htpy-dependent-cocone-sequential-diagram A P
-          ( dependent-cocone-dependent-cofork-sequential-diagram
+          ( dependent-cocone-sequential-diagram-dependent-cofork
             ( dependent-cofork-dependent-cocone-sequential-diagram d))
           ( d)
           ( ev-pair refl-htpy , ev-pair right-unit-htpy)
 
-    is-equiv-dependent-cocone-dependent-cofork-sequential-diagram :
-      is-equiv dependent-cocone-dependent-cofork-sequential-diagram
-    is-equiv-dependent-cocone-dependent-cofork-sequential-diagram =
+    is-equiv-dependent-cocone-sequential-diagram-dependent-cofork :
+      is-equiv dependent-cocone-sequential-diagram-dependent-cofork
+    is-equiv-dependent-cocone-sequential-diagram-dependent-cofork =
       is-equiv-is-invertible
         ( dependent-cofork-dependent-cocone-sequential-diagram)
-        ( is-retraction-dependent-cocone-dependent-cofork-sequential-diagram)
-        ( is-section-dependent-cocone-dependent-cofork-sequential-diagram)
+        ( is-retraction-dependent-cocone-sequential-diagram-dependent-cofork)
+        ( is-section-dependent-cocone-sequential-diagram-dependent-cofork)
 
-    equiv-dependent-cofork-dependent-cocone-sequential-diagram :
+    equiv-dependent-cocone-sequential-diagram-dependent-cofork :
       dependent-cofork
         ( bottom-map-cofork-cocone-sequential-diagram A)
         ( top-map-cofork-cocone-sequential-diagram A)
         ( cofork-cocone-sequential-diagram A c)
         ( P) ‚âÉ
       dependent-cocone-sequential-diagram A c P
-    pr1 equiv-dependent-cofork-dependent-cocone-sequential-diagram =
-      dependent-cocone-dependent-cofork-sequential-diagram
-    pr2 equiv-dependent-cofork-dependent-cocone-sequential-diagram =
-      is-equiv-dependent-cocone-dependent-cofork-sequential-diagram
+    pr1 equiv-dependent-cocone-sequential-diagram-dependent-cofork =
+      dependent-cocone-sequential-diagram-dependent-cofork
+    pr2 equiv-dependent-cocone-sequential-diagram-dependent-cofork =
+      is-equiv-dependent-cocone-sequential-diagram-dependent-cofork
 
-  triangle-dependent-cocone-dependent-cofork-sequential-diagram :
+  triangle-dependent-cocone-sequential-diagram-dependent-cofork :
     { l3 : Level} (P : X ‚Üí UU l3) ‚Üí
     coherence-triangle-maps
       ( dependent-cocone-map-sequential-diagram A c P)
-      ( dependent-cocone-dependent-cofork-sequential-diagram P)
+      ( dependent-cocone-sequential-diagram-dependent-cofork P)
       ( dependent-cofork-map
         ( bottom-map-cofork-cocone-sequential-diagram A)
         ( top-map-cofork-cocone-sequential-diagram A)
         ( cofork-cocone-sequential-diagram A c))
-  triangle-dependent-cocone-dependent-cofork-sequential-diagram P h =
+  triangle-dependent-cocone-sequential-diagram-dependent-cofork P h =
     eq-htpy-dependent-cocone-sequential-diagram A P
       ( dependent-cocone-map-sequential-diagram A c P h)
-      ( dependent-cocone-dependent-cofork-sequential-diagram P
+      ( dependent-cocone-sequential-diagram-dependent-cofork P
         ( dependent-cofork-map
           ( bottom-map-cofork-cocone-sequential-diagram A)
           ( top-map-cofork-cocone-sequential-diagram A)
diff --git a/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md b/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
index 40b260ad47..ae1634c6cb 100644
--- a/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-universal-property-sequential-colimits.lagda.md
@@ -147,14 +147,36 @@ module _
     ( P) =
     is-equiv-comp-htpy
       ( dependent-cocone-map-sequential-diagram A c P)
-      ( dependent-cocone-dependent-cofork-sequential-diagram A c P)
+      ( dependent-cocone-sequential-diagram-dependent-cofork A c P)
       ( dependent-cofork-map
         ( bottom-map-cofork-cocone-sequential-diagram A)
         ( top-map-cofork-cocone-sequential-diagram A)
         ( cofork-cocone-sequential-diagram A c))
-      ( triangle-dependent-cocone-dependent-cofork-sequential-diagram A c P)
+      ( triangle-dependent-cocone-sequential-diagram-dependent-cofork A c P)
       ( dup-coequalizer P)
-      ( is-equiv-dependent-cocone-dependent-cofork-sequential-diagram A c P)
+      ( is-equiv-dependent-cocone-sequential-diagram-dependent-cofork A c P)
+
+  dependent-universal-property-coequalizer-dependent-universal-property-sequential-colimit :
+    ( {l : Level} ‚Üí
+      dependent-universal-property-sequential-colimit l A c) ‚Üí
+    ( {l : Level} ‚Üí
+      dependent-universal-property-coequalizer l
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c))
+  dependent-universal-property-coequalizer-dependent-universal-property-sequential-colimit
+    ( dup-sequential-colimit)
+    ( P) =
+    is-equiv-right-factor-htpy
+      ( dependent-cocone-map-sequential-diagram A c P)
+      ( dependent-cocone-sequential-diagram-dependent-cofork A c P)
+      ( dependent-cofork-map
+        ( bottom-map-cofork-cocone-sequential-diagram A)
+        ( top-map-cofork-cocone-sequential-diagram A)
+        ( cofork-cocone-sequential-diagram A c))
+      ( triangle-dependent-cocone-sequential-diagram-dependent-cofork A c P)
+      ( is-equiv-dependent-cocone-sequential-diagram-dependent-cofork A c P)
+      ( dup-sequential-colimit P)
 ```
 
 ### The non-dependent and dependent universal properties of sequential colimits are logically equivalent
@@ -173,13 +195,13 @@ module _
     ( Y) =
     is-equiv-comp-htpy
       ( cocone-map-sequential-diagram A c)
-      ( map-compute-dependent-cocone-constant-family-sequential-diagram A c Y)
+      ( map-compute-dependent-cocone-sequential-diagram-constant-family A c Y)
       ( dependent-cocone-map-sequential-diagram A c (Œª _ ‚Üí Y))
-      ( triangle-compute-dependent-cocone-constant-family-sequential-diagram A c
+      ( triangle-compute-dependent-cocone-sequential-diagram-constant-family A c
         ( Y))
       ( dup-sequential-colimit (Œª _ ‚Üí Y))
       ( is-equiv-map-equiv
-        ( compute-dependent-cocone-constant-family-sequential-diagram A c Y))
+        ( compute-dependent-cocone-sequential-diagram-constant-family A c Y))
 
   dependent-universal-property-universal-property-sequential-colimit :
     ( {l : Level} ‚Üí universal-property-sequential-colimit l A c) ‚Üí
@@ -193,7 +215,7 @@ module _
         ( bottom-map-cofork-cocone-sequential-diagram A)
         ( top-map-cofork-cocone-sequential-diagram A)
         ( cofork-cocone-sequential-diagram A c)
-        ( universal-property-coequalizer-universal-property-cocone-sequential-colimit
+        ( universal-property-coequalizer-universal-property-sequential-colimit
           ( A)
           ( c)
           ( up-sequential-diagram)))
diff --git a/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
index bbd4b2bbc0..d1b57edf56 100644
--- a/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
+++ b/src/synthetic-homotopy-theory/universal-property-sequential-colimits.lagda.md
@@ -168,7 +168,7 @@ module _
       ( up-cofork Y)
       ( is-equiv-cocone-sequential-diagram-cofork A)
 
-  universal-property-coequalizer-universal-property-cocone-sequential-colimit :
+  universal-property-coequalizer-universal-property-sequential-colimit :
     ( {l : Level} ‚Üí
       universal-property-sequential-colimit l A c) ‚Üí
     ( {l : Level} ‚Üí
@@ -176,7 +176,7 @@ module _
         ( bottom-map-cofork-cocone-sequential-diagram A)
         ( top-map-cofork-cocone-sequential-diagram A)
         ( cofork-cocone-sequential-diagram A c))
-  universal-property-coequalizer-universal-property-cocone-sequential-colimit
+  universal-property-coequalizer-universal-property-sequential-colimit
     ( up-sequential-colimit)
     ( Y) =
     is-equiv-right-factor-htpy

From c1743031a3e0050e4ea470c325ec84c86a054dac Mon Sep 17 00:00:00 2001
From: VojtechStep <vojtechstepancik@outlook.com>
Date: Sun, 22 Oct 2023 22:05:25 +0200
Subject: [PATCH 24/28] Implement `is-torsorial`

---
 .../cocones-under-sequential-diagrams.lagda.md              | 6 ++----
 .../dependent-cocones-under-sequential-diagrams.lagda.md    | 6 ++----
 .../equivalences-sequential-diagrams.lagda.md               | 4 ++--
 .../morphisms-sequential-diagrams.lagda.md                  | 5 ++---
 4 files changed, 8 insertions(+), 13 deletions(-)

diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index 1c66c11747..45ffefa321 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -14,7 +14,6 @@ open import foundation.binary-homotopies
 open import foundation.commuting-squares-of-homotopies
 open import foundation.commuting-squares-of-maps
 open import foundation.commuting-triangles-of-maps
-open import foundation.contractible-types
 open import foundation.dependent-pair-types
 open import foundation.equivalences
 open import foundation.function-extensionality
@@ -25,6 +24,7 @@ open import foundation.homotopies
 open import foundation.homotopy-induction
 open import foundation.identity-types
 open import foundation.structure-identity-principle
+open import foundation.torsorial-type-families
 open import foundation.universe-levels
 open import foundation.whiskering-homotopies
 
@@ -201,9 +201,7 @@ module _
   abstract
     is-torsorial-htpy-cocone-sequential-diagram :
       ( c : cocone-sequential-diagram A X) ‚Üí
-      is-contr
-        ( Œ£ ( cocone-sequential-diagram A X)
-            ( htpy-cocone-sequential-diagram A c))
+      is-torsorial (htpy-cocone-sequential-diagram A c)
     is-torsorial-htpy-cocone-sequential-diagram c =
       is-torsorial-Eq-structure
         ( ev-pair (coherence-htpy-cocone-sequential-diagram A c))
diff --git a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
index d1588679ad..52d7ae7d06 100644
--- a/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-cocones-under-sequential-diagrams.lagda.md
@@ -14,7 +14,6 @@ open import foundation.action-on-identifications-functions
 open import foundation.binary-homotopies
 open import foundation.commuting-triangles-of-maps
 open import foundation.constant-type-families
-open import foundation.contractible-types
 open import foundation.dependent-homotopies
 open import foundation.dependent-identifications
 open import foundation.dependent-pair-types
@@ -28,6 +27,7 @@ open import foundation.homotopies
 open import foundation.homotopy-induction
 open import foundation.identity-types
 open import foundation.structure-identity-principle
+open import foundation.torsorial-type-families
 open import foundation.transport-along-identifications
 open import foundation.universe-levels
 
@@ -208,9 +208,7 @@ module _
   abstract
     is-torsorial-htpy-dependent-cocone-sequential-diagram :
       ( d : dependent-cocone-sequential-diagram A c P) ‚Üí
-      is-contr
-        ( Œ£ ( dependent-cocone-sequential-diagram A c P)
-            ( htpy-dependent-cocone-sequential-diagram A P d))
+      is-torsorial (htpy-dependent-cocone-sequential-diagram A P d)
     is-torsorial-htpy-dependent-cocone-sequential-diagram d =
       is-torsorial-Eq-structure
         ( ev-pair (coherence-htpy-dependent-cocone-sequential-diagram A P d))
diff --git a/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
index 130c673243..0ef1c1a4a2 100644
--- a/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/equivalences-sequential-diagrams.lagda.md
@@ -9,7 +9,6 @@ module synthetic-homotopy-theory.equivalences-sequential-diagrams where
 ```agda
 open import elementary-number-theory.natural-numbers
 
-open import foundation.contractible-types
 open import foundation.dependent-pair-types
 open import foundation.equality-dependent-function-types
 open import foundation.equivalences
@@ -19,6 +18,7 @@ open import foundation.homotopies
 open import foundation.homotopy-induction
 open import foundation.identity-types
 open import foundation.structure-identity-principle
+open import foundation.torsorial-type-families
 open import foundation.univalence
 open import foundation.universe-levels
 
@@ -134,7 +134,7 @@ equiv-eq-sequential-diagram A .A refl = id-equiv-sequential-diagram A
 abstract
   is-torsorial-equiv-sequential-diagram :
     { l1 : Level} (A : sequential-diagram l1) ‚Üí
-    is-contr (Œ£ (sequential-diagram l1) (equiv-sequential-diagram A))
+    is-torsorial (equiv-sequential-diagram {l2 = l1} A)
   is-torsorial-equiv-sequential-diagram A =
     is-torsorial-Eq-structure _
       ( is-torsorial-Eq-Œ†
diff --git a/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
index 0844d164fe..7adbaf5f53 100644
--- a/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/morphisms-sequential-diagrams.lagda.md
@@ -12,7 +12,6 @@ open import elementary-number-theory.natural-numbers
 open import foundation.binary-homotopies
 open import foundation.commuting-squares-of-homotopies
 open import foundation.commuting-squares-of-maps
-open import foundation.contractible-types
 open import foundation.dependent-pair-types
 open import foundation.equality-dependent-function-types
 open import foundation.equivalences
@@ -22,6 +21,7 @@ open import foundation.homotopies
 open import foundation.homotopy-induction
 open import foundation.identity-types
 open import foundation.structure-identity-principle
+open import foundation.torsorial-type-families
 open import foundation.universe-levels
 open import foundation.whiskering-homotopies
 
@@ -235,8 +235,7 @@ module _
   abstract
     is-torsorial-htpy-sequential-diagram :
       ( f : hom-sequential-diagram A B) ‚Üí
-      is-contr
-        ( Œ£ (hom-sequential-diagram A B) (htpy-hom-sequential-diagram B f))
+      is-torsorial (htpy-hom-sequential-diagram B f)
     is-torsorial-htpy-sequential-diagram f =
       is-torsorial-Eq-structure
         ( ev-pair (coherence-htpy-sequential-diagram B f))

From d55384b58e04e58d48de88e6749a1d27d14c28b9 Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Mon, 23 Oct 2023 11:27:24 +0200
Subject: [PATCH 25/28] Update
 src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md

---
 .../cocones-under-sequential-diagrams.lagda.md                  | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index 45ffefa321..19eabb0e3a 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -38,7 +38,7 @@ open import synthetic-homotopy-theory.sequential-diagrams
 
 A **cocone under a
 [sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)
-`(A, a)`** with vertex `X : ùì§` consists of a family of maps `i‚Çô : A n ‚Üí C` and a
+`(A, a)`** with codomain `X : ùì§` consists of a family of maps `i‚Çô : A n ‚Üí C` and a
 family of [homotopies](foundation.homotopies.md) `H‚Çô` asserting that the
 triangles
 

From ba50df40bd4d7c2fc7c41d9dca02f98e9f2a31ac Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Mon, 23 Oct 2023 11:27:33 +0200
Subject: [PATCH 26/28] Update
 src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md

---
 ...dent-universal-property-coequalizers.lagda.md | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
index 58f04fa92c..8b451c0ef2 100644
--- a/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
+++ b/src/synthetic-homotopy-theory/dependent-universal-property-coequalizers.lagda.md
@@ -186,14 +186,14 @@ module _
   universal-property-dependent-universal-property-coequalizer
     ( dup-coequalizer)
     ( Y) =
-      is-equiv-comp-htpy
-        ( cofork-map f g e)
-        ( map-compute-dependent-cofork-constant-family f g e Y)
-        ( dependent-cofork-map f g e)
-        ( triangle-compute-dependent-cofork-constant-family f g e Y)
-        ( dup-coequalizer (Œª _ ‚Üí Y))
-        ( is-equiv-map-equiv
-          ( compute-dependent-cofork-constant-family f g e Y))
+    is-equiv-comp-htpy
+      ( cofork-map f g e)
+      ( map-compute-dependent-cofork-constant-family f g e Y)
+      ( dependent-cofork-map f g e)
+      ( triangle-compute-dependent-cofork-constant-family f g e Y)
+      ( dup-coequalizer (Œª _ ‚Üí Y))
+      ( is-equiv-map-equiv
+        ( compute-dependent-cofork-constant-family f g e Y))
 
   dependent-universal-property-universal-property-coequalizer :
     ( {l : Level} ‚Üí universal-property-coequalizer l f g e) ‚Üí

From 24edd715e239bc60aa793651bb764fed4a35426b Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Mon, 23 Oct 2023 11:27:49 +0200
Subject: [PATCH 27/28] Update
 src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md

---
 .../cocones-under-sequential-diagrams.lagda.md         | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index 19eabb0e3a..7ef0f3f9f7 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -119,11 +119,11 @@ module _
     UU (l1 ‚äî l2)
   coherence-htpy-cocone-sequential-diagram c c' K =
     ( n : ‚Ñï) ‚Üí
-      coherence-square-homotopies
-        ( coherence-triangle-cocone-sequential-diagram A c n)
-        ( K (succ-‚Ñï n) ¬∑r map-sequential-diagram A n)
-        ( K n)
-        ( coherence-triangle-cocone-sequential-diagram A c' n)
+    coherence-square-homotopies
+      ( coherence-triangle-cocone-sequential-diagram A c n)
+      ( K (succ-‚Ñï n) ¬∑r map-sequential-diagram A n)
+      ( K n)
+      ( coherence-triangle-cocone-sequential-diagram A c' n)
 
   htpy-cocone-sequential-diagram :
     ( c c' : cocone-sequential-diagram A X) ‚Üí UU (l1 ‚äî l2)

From 1900e797e782e4fe588edfe0b4ddbe6f03bca7e7 Mon Sep 17 00:00:00 2001
From: Egbert Rijke <e.m.rijke@gmail.com>
Date: Mon, 23 Oct 2023 11:37:09 +0200
Subject: [PATCH 28/28] Update
 src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md

---
 .../cocones-under-sequential-diagrams.lagda.md                | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
index 7ef0f3f9f7..1c66c18e04 100644
--- a/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
+++ b/src/synthetic-homotopy-theory/cocones-under-sequential-diagrams.lagda.md
@@ -38,8 +38,8 @@ open import synthetic-homotopy-theory.sequential-diagrams
 
 A **cocone under a
 [sequential diagram](synthetic-homotopy-theory.sequential-diagrams.md)
-`(A, a)`** with codomain `X : ùì§` consists of a family of maps `i‚Çô : A n ‚Üí C` and a
-family of [homotopies](foundation.homotopies.md) `H‚Çô` asserting that the
+`(A, a)`** with codomain `X : ùì§` consists of a family of maps `i‚Çô : A n ‚Üí C` and
+a family of [homotopies](foundation.homotopies.md) `H‚Çô` asserting that the
 triangles
 
 ```text
